local gsl = require("lgsl.gsl")
local sf= require("lgsl.sf")
local GSL_DBL_EPSILON, GSL_SQRT_DBL_EPSILON, GSL_LOG_DBL_MAX = 2.2204460492503131e-16, 1.4901161193847656e-08, 7.0978271289338397e+02
local function sprintf(...) io.write(string.format(...)) end
local sqrt, log, exp, M_PI, M_PI_2, DBL_MAX = math.sqrt, math.log, math.exp, math.pi, math.pi/2, 1.7976931348623157E+308
local function compare(val, ref, name, eps)
  eps = eps or 1e-9
  local inc = 0
  if val==0 or ref==0 then inc = 1 end
  if gsl.gsl_fcmp(val+inc,ref+inc,eps*100)==0 then
    sprintf("Pass %-30s: % .15e\n", name, ref,"\n")
  else
    sprintf("Fail %-30s: % .15e ~= % .15e\n", name, val, ref)
  end
end
local TEST_TOL0 = (2.0*GSL_DBL_EPSILON)
local TEST_TOL1 = (16.0*GSL_DBL_EPSILON)
local TEST_TOL2 = (256.0*GSL_DBL_EPSILON)
local TEST_TOL3 = (2048.0*GSL_DBL_EPSILON)
local TEST_TOL4 = (16384.0*GSL_DBL_EPSILON)
local TEST_TOL5 = (131072.0*GSL_DBL_EPSILON)
local TEST_TOL6 = (1048576.0*GSL_DBL_EPSILON)
local TEST_SQRT_TOL0 = (2.0*GSL_SQRT_DBL_EPSILON)
compare(sf.lngamma(-0.1)                 ,      2.368961332728788655 , "lngamma(-0.1)", TEST_TOL0)
compare(sf.lngamma(-1.0/256.0)           ,     5.547444766967471595  , "lngamma(-1.0/256.0)", TEST_TOL0)
compare(sf.lngamma(1.0e-08)              ,     18.420680738180208905 , "lngamma(1.0e-08)", TEST_TOL0)
compare(sf.lngamma(0.1)                  ,         2.252712651734205 , "lngamma(0.1)", TEST_TOL0)
compare(sf.lngamma(1.0 + 1.0/256.0)      ,  -0.0022422226599611501448 , "lngamma(1.0 + 1.0/256.0)", TEST_TOL0)
compare(sf.lngamma(2.0 + 1.0/256.0)      ,  0.0016564177556961728692 , "lngamma(2.0 + 1.0/256.0)", TEST_TOL0)
compare(sf.lngamma(100.0)                ,         359.1342053695753 , "lngamma(100.0)", TEST_TOL0)
compare(sf.lngamma(-1.0-1.0/65536.0)     ,     11.090348438090047844 , "lngamma(-1.0-1.0/65536.0)", TEST_TOL0)
compare(sf.lngamma(-1.0-1.0/268435456.0) ,     19.408121054103474300 , "lngamma(-1.0-1.0/268435456.0)", TEST_TOL0)
compare(sf.lngamma(-100.5)               ,     -364.9009683094273518 , "lngamma(-100.5)", TEST_TOL0)
compare(sf.lngamma(-100-1.0/65536.0)     ,     -352.6490910117097874 , "lngamma(-100-1.0/65536.0)", TEST_TOL0)
compare(sf.gamma(1.0 + 1.0/4096.0)       ,     0.9998591371459403421 , "gamma(1.0 + 1.0/4096.0)", TEST_TOL0)
compare(sf.gamma(1.0 + 1.0/32.0)         ,     0.9829010992836269148 , "gamma(1.0 + 1.0/32.0)", TEST_TOL0)
compare(sf.gamma(2.0 + 1.0/256.0)        ,     1.0016577903733583299 , "gamma(2.0 + 1.0/256.0)", TEST_TOL0)
compare(sf.gamma(9.0)                    ,  40320.0                   , "gamma(9.0)", TEST_TOL0)
compare(sf.gamma(10.0)                   ,  362880.0                  , "gamma(10.0)", TEST_TOL0)
compare(sf.gamma(100.0)                  ,  9.332621544394415268e+155 , "gamma(100.0)", TEST_TOL2)
compare(sf.gamma(170.0)                  ,  4.269068009004705275e+304 , "gamma(170.0)", TEST_TOL2)
compare(sf.gamma(171.0)                  ,  7.257415615307998967e+306 , "gamma(171.0)", TEST_TOL2)
compare(sf.gamma(-10.5)                  ,  -2.640121820547716316e-07  , "gamma(-10.5)", TEST_TOL0)
compare(sf.gamma(-1.0+1.0/65536.0)       ,     -65536.42280587818970 , "gamma(-1.0+1.0/65536.0)", TEST_TOL0)
compare(sf.gammastar(1.0e-08)            ,     3989.423555759890865  , "gammastar(1.0e-08)", TEST_TOL1)
compare(sf.gammastar(1.0e-05)            ,     126.17168469882690233 , "gammastar(1.0e-05)", TEST_TOL0)
compare(sf.gammastar(0.001)              ,     12.708492464364073506 , "gammastar(0.001)", TEST_TOL0)
compare(sf.gammastar(1.5)                ,     1.0563442442685598666 , "gammastar(1.5)", TEST_TOL0)
compare(sf.gammastar(3.0)                ,     1.0280645179187893045 , "gammastar(3.0)", TEST_TOL0)
compare(sf.gammastar(9.0)                ,     1.0092984264218189715 , "gammastar(9.0)", TEST_TOL0)
compare(sf.gammastar(11.0)               ,     1.0076024283104962850 , "gammastar(11.0)", TEST_TOL0)
compare(sf.gammastar(100.0)              ,     1.0008336778720121418 , "gammastar(100.0)", TEST_TOL0)
compare(sf.gammastar(1.0e+05)            ,     1.0000008333336805529 , "gammastar(1.0e+05)", TEST_TOL0)
compare(sf.gammastar(1.0e+20)            ,                       1.0 , "gammastar(1.0e+20)", TEST_TOL0)
compare(sf.gammainv(1.0)                 ,                        1.0, "gammainv(1.0)", TEST_TOL0)
compare(sf.gammainv(2.0)                 ,                        1.0, "gammainv(2.0)", TEST_TOL0)
compare(sf.gammainv(3.0)                 ,                        0.5, "gammainv(3.0)", TEST_TOL0)
compare(sf.gammainv(4.0)                 ,                    1.0/6.0, "gammainv(4.0)", TEST_TOL0)
compare(sf.gammainv(10.0)                ,               1.0/362880.0, "gammainv(10.0)", TEST_TOL0)
compare(sf.gammainv(100.0)               ,  1.0715102881254669232e-156, "gammainv(100.0)", TEST_TOL2)
compare(sf.gammainv(0.0)                 ,                        0.0, "gammainv(0.0)", TEST_TOL0)
compare(sf.gammainv(-1.0)                ,                        0.0, "gammainv(-1.0)", TEST_TOL0)
compare(sf.gammainv(-2.0)                ,                        0.0, "gammainv(-2.0)", TEST_TOL0)
compare(sf.gammainv(-3.0)                ,                        0.0, "gammainv(-3.0)", TEST_TOL0)
compare(sf.gammainv(-4.0)                ,                        0.0, "gammainv(-4.0)", TEST_TOL0)
compare(sf.gammainv(-10.5)               ,  -1.0/2.640121820547716316e-07, "gammainv(-10.5)", TEST_TOL2)
compare(sf.gammainv(-11.25)              ,  1.0/6.027393816261931672e-08, "gammainv(-11.25)", TEST_TOL1)
compare(sf.gammainv(-1.0+1.0/65536.0)    ,  -1.0/65536.42280587818970 , "gammainv(-1.0+1.0/65536.0)", TEST_TOL1)
compare(sf.taylorcoeff(10,   1.0/1048576.0),  1.7148961854776073928e-67  , "taylorcoeff(10,   1.0/1048576.0)", TEST_TOL0)
compare(sf.taylorcoeff(10,   1.0/1024.0) ,  2.1738891788497900281e-37  , "taylorcoeff(10,   1.0/1024.0)", TEST_TOL0)
compare(sf.taylorcoeff(10,   1.0)        ,  2.7557319223985890653e-07  , "taylorcoeff(10,   1.0)", TEST_TOL0)
compare(sf.taylorcoeff(10,   5.0)        ,  2.6911444554673721340      , "taylorcoeff(10,   5.0)", TEST_TOL0)
compare(sf.taylorcoeff(10,   500.0)      ,  2.6911444554673721340e+20  , "taylorcoeff(10,   500.0)", TEST_TOL0)
compare(sf.taylorcoeff(100,  100.0)      ,  1.0715102881254669232e+42  , "taylorcoeff(100,  100.0)", TEST_TOL1)
compare(sf.taylorcoeff(1000, 200.0)      ,  2.6628790558154746898e-267 , "taylorcoeff(1000, 200.0)", TEST_TOL1)
compare(sf.taylorcoeff(1000, 500.0)      ,  2.3193170139740855074e+131 , "taylorcoeff(1000, 500.0)", TEST_TOL1)
compare(sf.fact(0)                       ,                       1.0 , "fact(0)", TEST_TOL0)
compare(sf.fact(1)                       ,                       1.0 , "fact(1)", TEST_TOL0)
compare(sf.fact(7)                       ,                    5040.0 , "fact(7)", TEST_TOL0)
compare(sf.fact(33)                      ,  8.683317618811886496e+36 , "fact(33)", TEST_TOL0)
compare(sf.doublefact(0)                 ,                       1.0 , "doublefact(0)", TEST_TOL0)
compare(sf.doublefact(1)                 ,                       1.0 , "doublefact(1)", TEST_TOL0)
compare(sf.doublefact(7)                 ,                     105.0 , "doublefact(7)", TEST_TOL0)
compare(sf.doublefact(33)                ,  6.332659870762850625e+18 , "doublefact(33)", TEST_TOL0)
compare(sf.lnfact(0)                     ,                       0.0 , "lnfact(0)", TEST_TOL0)
compare(sf.lnfact(1)                     ,                       0.0 , "lnfact(1)", TEST_TOL0)
compare(sf.lnfact(7)                     ,      8.525161361065414300 , "lnfact(7)", TEST_TOL0)
compare(sf.lnfact(33)                    ,      85.05446701758151741 , "lnfact(33)", TEST_TOL0)
compare(sf.lndoublefact(0)               ,                      0.0  , "lndoublefact(0)", TEST_TOL0)
compare(sf.lndoublefact(7)               ,     4.653960350157523371  , "lndoublefact(7)", TEST_TOL0)
compare(sf.lndoublefact(33)              ,     43.292252022541719660 , "lndoublefact(33)", TEST_TOL0)
compare(sf.lndoublefact(34)              ,     45.288575519655959140 , "lndoublefact(34)", TEST_TOL0)
compare(sf.lndoublefact(1034)            ,     3075.6383796271197707 , "lndoublefact(1034)", TEST_TOL0)
compare(sf.lndoublefact(1035)            ,     3078.8839081731809169 , "lndoublefact(1035)", TEST_TOL0)
compare(sf.lnchoose(7,3)                 ,      3.555348061489413680 , "lnchoose(7,3)", TEST_TOL0)
compare(sf.lnchoose(5,2)                 ,      2.302585092994045684 , "lnchoose(5,2)", TEST_TOL0)
compare(sf.choose(7,3)                   ,                      35.0 , "choose(7,3)", TEST_TOL0)
compare(sf.choose(7,4)                   ,                      35.0 , "choose(7,4)", TEST_TOL0)
compare(sf.choose(5,2)                   ,                      10.0 , "choose(5,2)", TEST_TOL0)
compare(sf.choose(5,3)                   ,                      10.0 , "choose(5,3)", TEST_TOL0)
compare(sf.choose(500,495)               ,             255244687600.0, "choose(500,495)", TEST_TOL0)
compare(sf.choose(500,5)                 ,             255244687600.0, "choose(500,5)", TEST_TOL0)
compare(sf.choose(500,200)               ,  5.054949849935532221e+144 , "choose(500,200)", TEST_TOL5)
compare(sf.choose(500,300)               ,  5.054949849935532221e+144 , "choose(500,300)", TEST_TOL5)
compare(sf.lnpoch(5, 0.0)                ,                        0.0, "lnpoch(5, 0.0)", TEST_TOL0)
compare(sf.lnpoch(5, 1.0/65536.0)        ,  0.000022981557571259389129, "lnpoch(5, 1.0/65536.0)", TEST_TOL0)
compare(sf.lnpoch(5, 1.0/256.0)          ,    0.005884960217985189004, "lnpoch(5, 1.0/256.0)", TEST_TOL2)
compare(sf.lnpoch(7,3)                   ,       6.222576268071368616, "lnpoch(7,3)", TEST_TOL0)
compare(sf.lnpoch(5,2)                   ,       3.401197381662155375, "lnpoch(5,2)", TEST_TOL0)
compare(sf.poch(5, 0.0)                  ,                        1.0, "poch(5, 0.0)", TEST_TOL0)
compare(sf.poch(7,3)                     ,                     504.0 , "poch(7,3)", TEST_TOL0)
compare(sf.poch(5,2)                     ,                     30.0  , "poch(5,2)", TEST_TOL1)
compare(sf.poch(5,1.0/256.0)             ,     1.0059023106151364982 , "poch(5,1.0/256.0)", TEST_TOL0)
compare(sf.pochrel(5,0)                  ,       1.506117668431800472, "pochrel(5,0)", TEST_TOL1)
compare(sf.pochrel(7,3)                  ,                  503.0/3.0, "pochrel(7,3)", TEST_TOL0)
compare(sf.pochrel(5,2)                  ,                   29.0/2.0, "pochrel(5,2)", TEST_TOL1)
compare(sf.pochrel(5,0.01)               ,      1.5186393661368275330, "pochrel(5,0.01)", TEST_TOL2)
compare(sf.pochrel(-5.5,0.01)            ,      1.8584945633829063516, "pochrel(-5.5,0.01)", TEST_TOL1)
compare(sf.pochrel(-5.5,-1.0/8.0)        ,      1.0883319303552135488, "pochrel(-5.5,-1.0/8.0)", TEST_TOL1)
compare(sf.pochrel(-5.5,-1.0/256.0)      ,      1.7678268037726177453, "pochrel(-5.5,-1.0/256.0)", TEST_TOL1)
compare(sf.pochrel(-5.5,-11.0)           ,     0.09090909090939652475, "pochrel(-5.5,-11.0)", TEST_TOL0)
compare(sf.poch(-9.0, -4.0)              ,                1.0/17160.0, "poch(-9.0, -4.0)", TEST_TOL0)
compare(sf.poch(-9.0, -3.0)              ,                -1.0/1320.0, "poch(-9.0, -3.0)", TEST_TOL0)
compare(sf.poch(-9.0, -3.5)              ,                          0, "poch(-9.0, -3.5)", TEST_TOL0)
compare(sf.poch(-9.0, 4.0)               ,                     3024.0, "poch(-9.0, 4.0)", TEST_TOL0)
compare(sf.poch(-9.0, 3.0)               ,                     -504.0, "poch(-9.0, 3.0)", TEST_TOL0)
compare(sf.poch(-9.0, 3.5)               ,                        0.0, "poch(-9.0, 3.5)", TEST_TOL0)
compare(sf.poch(-9.0, 0.0)               ,                        1.0, "poch(-9.0, 0.0)", TEST_TOL0)
compare(sf.poch(-8.0, -4.0)              ,                1.0/11880.0, "poch(-8.0, -4.0)", TEST_TOL0)
compare(sf.poch(-8.0, -3.0)              ,                 -1.0/990.0, "poch(-8.0, -3.0)", TEST_TOL0)
compare(sf.poch(-8.0, 4.0)               ,                     1680.0, "poch(-8.0, 4.0)", TEST_TOL0)
compare(sf.poch(-8.0, 3.0)               ,                     -336.0, "poch(-8.0, 3.0)", TEST_TOL0)
compare(sf.poch(-3.0, 4.0)               ,                        0.0, "poch(-3.0, 4.0)", TEST_TOL0)
compare(sf.poch(-3.0, 3.0)               ,                       -6.0, "poch(-3.0, 3.0)", TEST_TOL2)
compare(sf.poch(-4.0, 4.0)               ,                       24.0, "poch(-4.0, 4.0)", TEST_TOL2)
compare(sf.poch(-3.0, 100.0)             ,                        0.0, "poch(-3.0, 100.0)", TEST_TOL0)
compare(sf.gamma_inc_P(1e-100, 0.001)    ,                        1.0, "gamma_inc_P(1e-100, 0.001)", TEST_TOL0)
compare(sf.gamma_inc_P(0.001, 0.001)     ,      0.9936876467088602902, "gamma_inc_P(0.001, 0.001)", TEST_TOL0)
compare(sf.gamma_inc_P(0.001, 1.0)       ,      0.9997803916424144436, "gamma_inc_P(0.001, 1.0)", TEST_TOL0)
compare(sf.gamma_inc_P(0.001, 10.0)      ,      0.9999999958306921828, "gamma_inc_P(0.001, 10.0)", TEST_TOL0)
compare(sf.gamma_inc_P(1.0, 0.001)       ,   0.0009995001666250083319, "gamma_inc_P(1.0, 0.001)", TEST_TOL0)
compare(sf.gamma_inc_P(1.0, 1.01)        ,      0.6357810204284766802, "gamma_inc_P(1.0, 1.01)", TEST_TOL0)
compare(sf.gamma_inc_P(1.0, 10.0)        ,      0.9999546000702375151, "gamma_inc_P(1.0, 10.0)", TEST_TOL0)
compare(sf.gamma_inc_P(10.0, 10.01)      ,      0.5433207586693410570, "gamma_inc_P(10.0, 10.01)", TEST_TOL0)
compare(sf.gamma_inc_P(10.0, 20.0)       ,      0.9950045876916924128, "gamma_inc_P(10.0, 20.0)", TEST_TOL0)
compare(sf.gamma_inc_P(1000.0, 1000.1)   ,      0.5054666401440661753, "gamma_inc_P(1000.0, 1000.1)", TEST_TOL2)
compare(sf.gamma_inc_P(1000.0, 2000.0)   ,                        1.0, "gamma_inc_P(1000.0, 2000.0)", TEST_TOL0)
compare(sf.gamma_inc_P(34.0, 32.0)       ,  0.3849626436463866776322932129, "gamma_inc_P(34.0, 32.0)", TEST_TOL2)
compare(sf.gamma_inc_P(37.0, 3.499999999999999289e+01),  0.3898035054195570860969333039, "gamma_inc_P(37.0, 3.499999999999999289e+01)", TEST_TOL2)
compare(sf.gamma_inc_P(10, 1e-16)        ,  2.755731922398588814734648067e-167, "gamma_inc_P(10, 1e-16)", TEST_TOL2)
compare(sf.gamma_inc_P(1263131.0, 1261282.3637),  0.04994777516935182963821362168, "gamma_inc_P(1263131.0, 1261282.3637)", TEST_TOL4)
compare(sf.gamma_inc_P(1263131.0, 1263131.0),  0.500118321758657770672882362502514254, "gamma_inc_P(1263131.0, 1263131.0)", TEST_TOL4)
compare(sf.gamma_inc_Q(0.0, 0.001)       ,                        0.0, "gamma_inc_Q(0.0, 0.001)", TEST_TOL0)
compare(sf.gamma_inc_Q(0.001, 0.001)     ,    0.006312353291139709793, "gamma_inc_Q(0.001, 0.001)", TEST_TOL0)
compare(sf.gamma_inc_Q(0.001, 1.0)       ,  0.00021960835758555639171, "gamma_inc_Q(0.001, 1.0)", TEST_TOL1)
compare(sf.gamma_inc_Q(0.001, 2.0)       ,  0.00004897691783098147880, "gamma_inc_Q(0.001, 2.0)", TEST_TOL2)
compare(sf.gamma_inc_Q(0.001, 5.0)       ,  1.1509813397308608541e-06, "gamma_inc_Q(0.001, 5.0)", TEST_TOL1)
compare(sf.gamma_inc_Q(1.0, 0.001)       ,      0.9990004998333749917, "gamma_inc_Q(1.0, 0.001)", TEST_TOL0)
compare(sf.gamma_inc_Q(1.0, 1.01)        ,      0.3642189795715233198, "gamma_inc_Q(1.0, 1.01)", TEST_TOL0)
compare(sf.gamma_inc_Q(1.0, 10.0)        ,  0.00004539992976248485154, "gamma_inc_Q(1.0, 10.0)", TEST_TOL0)
compare(sf.gamma_inc_Q(10.0, 10.01)      ,      0.4566792413306589430, "gamma_inc_Q(10.0, 10.01)", TEST_TOL0)
compare(sf.gamma_inc_Q(10.0, 100.0)      ,  1.1253473960842733885e-31, "gamma_inc_Q(10.0, 100.0)", TEST_TOL2)
compare(sf.gamma_inc_Q(1000.0, 1000.1)   ,      0.4945333598559338247, "gamma_inc_Q(1000.0, 1000.1)", TEST_TOL2)
compare(sf.gamma_inc_Q(1000.0, 2000.0)   ,  6.847349459614753180e-136, "gamma_inc_Q(1000.0, 2000.0)", TEST_TOL2)
compare(sf.gamma_inc_Q(100,  99.0)       ,         0.5266956696005394, "gamma_inc_Q(100,  99.0)", TEST_TOL2)
compare(sf.gamma_inc_Q(200, 199.0)       ,         0.5188414119121281, "gamma_inc_Q(200, 199.0)", TEST_TOL2)
compare(sf.gamma_inc_P(100,  99.0)       ,         0.4733043303994607, "gamma_inc_P(100,  99.0)", TEST_TOL2)
compare(sf.gamma_inc_P(200, 199.0)       ,         0.4811585880878718, "gamma_inc_P(200, 199.0)", TEST_TOL2)
compare(sf.gamma_inc_P(5670, 4574)       ,      3.063972328743934e-55, "gamma_inc_P(5670, 4574)", TEST_TOL2)
compare(sf.gamma_inc_Q(5670, 4574)       ,         1.0000000000000000, "gamma_inc_Q(5670, 4574)", TEST_TOL2)
compare(sf.gamma_inc_Q(1.0e+06-1.0, 1.0e+06-2.0),     0.50026596175224547004, "gamma_inc_Q(1.0e+06-1.0, 1.0e+06-2.0)", TEST_TOL3)
compare(sf.gamma_inc_Q(1.0e+06+2.0, 1.0e+06+1.0),     0.50026596135330304336, "gamma_inc_Q(1.0e+06+2.0, 1.0e+06+1.0)", TEST_TOL2)
compare(sf.gamma_inc_Q(1.0e+06, 1.0e+06-2.0),     0.50066490399940144811, "gamma_inc_Q(1.0e+06, 1.0e+06-2.0)", TEST_TOL2)
compare(sf.gamma_inc_Q(1.0e+07, 1.0e+07-2.0),     0.50021026104978614908, "gamma_inc_Q(1.0e+07, 1.0e+07-2.0)", TEST_TOL2)
compare(sf.gamma_inc(-1.0/1048576.0, 1.0/1048576.0),      13.285819596290624271, "gamma_inc(-1.0/1048576.0, 1.0/1048576.0)", TEST_TOL0)
compare(sf.gamma_inc(-0.001, 1.0/1048576.0),      13.381275128625328858, "gamma_inc(-0.001, 1.0/1048576.0)", TEST_TOL0)
compare(sf.gamma_inc(-1.0,   1.0/1048576.0),  1.0485617142715768655e+06, "gamma_inc(-1.0,   1.0/1048576.0)", TEST_TOL0)
compare(sf.gamma_inc(-0.00001,0.001)     ,      6.3317681434563592142, "gamma_inc(-0.00001,0.001)", TEST_TOL0)
compare(sf.gamma_inc(-0.0001,0.001)      ,      6.3338276439767189385, "gamma_inc(-0.0001,0.001)", TEST_TOL0)
compare(sf.gamma_inc(-0.001, 0.001)      ,      6.3544709102510843793, "gamma_inc(-0.001, 0.001)", TEST_TOL0)
compare(sf.gamma_inc(-0.5,   0.001)      ,      59.763880515942196981, "gamma_inc(-0.5,   0.001)", TEST_TOL0)
compare(sf.gamma_inc(-1.0,   0.001)      ,      992.66896046923884234, "gamma_inc(-1.0,   0.001)", TEST_TOL0)
compare(sf.gamma_inc(-3.5,   0.001)      ,  9.0224404490639003706e+09, "gamma_inc(-3.5,   0.001)", TEST_TOL1)
compare(sf.gamma_inc(-10.5,  0.001)      ,  3.0083661558184815656e+30, "gamma_inc(-10.5,  0.001)", TEST_TOL2)
compare(sf.gamma_inc(-0.001, 0.1)        ,      1.8249109609418620068, "gamma_inc(-0.001, 0.1)", TEST_TOL0)
compare(sf.gamma_inc(-0.5,   0.1)        ,      3.4017693366916154163, "gamma_inc(-0.5,   0.1)", TEST_TOL0)
compare(sf.gamma_inc(-10.0,  0.1)        ,  8.9490757483586989181e+08, "gamma_inc(-10.0,  0.1)", TEST_TOL1)
compare(sf.gamma_inc(-10.5,  0.1)        ,  2.6967403834226421766e+09, "gamma_inc(-10.5,  0.1)", TEST_TOL1)
compare(sf.gamma_inc(-0.001, 1.0)        ,     0.21928612679072766340, "gamma_inc(-0.001, 1.0)", TEST_TOL1)
compare(sf.gamma_inc(-0.5,   1.0)        ,     0.17814771178156069019, "gamma_inc(-0.5,   1.0)", TEST_TOL1)
compare(sf.gamma_inc(-1.0,   1.0)        ,     0.14849550677592204792, "gamma_inc(-1.0,   1.0)", TEST_TOL1)
compare(sf.gamma_inc(-2.5,   1.0)        ,    0.096556648631275160264, "gamma_inc(-2.5,   1.0)", TEST_TOL1)
compare(sf.gamma_inc(-1.0,   10.0)       ,  3.8302404656316087616e-07, "gamma_inc(-1.0,   10.0)", TEST_TOL1)
compare(sf.gamma_inc(-0.001, 10.0)       ,  4.1470562324807320961e-06, "gamma_inc(-0.001, 10.0)", TEST_TOL1)
compare(sf.gamma_inc(-0.5,   10.0)       ,  1.2609042613241570681e-06, "gamma_inc(-0.5,   10.0)", TEST_TOL0)
compare(sf.gamma_inc(-1.0,   10.0)       ,  3.8302404656316087616e-07, "gamma_inc(-1.0,   10.0)", TEST_TOL1)
compare(sf.gamma_inc(-10.5,  10.0)       ,  6.8404927328441566785e-17, "gamma_inc(-10.5,  10.0)", TEST_TOL1)
compare(sf.gamma_inc(-100.0, 10.0)       ,  4.1238327669858313997e-107, "gamma_inc(-100.0, 10.0)", TEST_TOL2)
compare(sf.gamma_inc(-200.0, 10.0)       ,  2.1614091830529343423e-207, "gamma_inc(-200.0, 10.0)", TEST_TOL2)
compare(sf.gamma_inc(  0.0,     0.001)   ,      6.3315393641361493320, "gamma_inc(  0.0,     0.001)", TEST_TOL0)
compare(sf.gamma_inc(  0.001,   0.001)   ,      6.3087159394864007261, "gamma_inc(  0.001,   0.001)", TEST_TOL0)
compare(sf.gamma_inc(  1.0,     0.001)   ,     0.99900049983337499167, "gamma_inc(  1.0,     0.001)", TEST_TOL0)
compare(sf.gamma_inc( 10.0,     0.001)   ,                   362880.0, "gamma_inc( 10.0,     0.001)", TEST_TOL0)
compare(sf.gamma_inc(  0.0,     1.0)     ,     0.21938393439552027368, "gamma_inc(  0.0,     1.0)", TEST_TOL0)
compare(sf.gamma_inc(  0.001,   1.0)     ,     0.21948181320730279613, "gamma_inc(  0.001,   1.0)", TEST_TOL1)
compare(sf.gamma_inc(  1.0,     1.0)     ,     0.36787944117144232160, "gamma_inc(  1.0,     1.0)", TEST_TOL0)
compare(sf.gamma_inc( 10.0,     1.0)     ,      362879.95956592242045, "gamma_inc( 10.0,     1.0)", TEST_TOL0)
compare(sf.gamma_inc(100.0,     1.0)     ,  9.3326215443944152682e+155, "gamma_inc(100.0,     1.0)", TEST_TOL0)
compare(sf.gamma_inc(  0.0,   100.0)     ,  3.6835977616820321802e-46, "gamma_inc(  0.0,   100.0)", TEST_TOL2)
compare(sf.gamma_inc(  0.001, 100.0)     ,  3.7006367674063550631e-46, "gamma_inc(  0.001, 100.0)", TEST_TOL2)
compare(sf.gamma_inc(  1.0,   100.0)     ,  3.7200759760208359630e-44, "gamma_inc(  1.0,   100.0)", TEST_TOL2)
compare(sf.gamma_inc( 10.0,   100.0)     ,  4.0836606309106112723e-26, "gamma_inc( 10.0,   100.0)", TEST_TOL2)
compare(sf.gamma_inc(100.0,   100.0)     ,  4.5421981208626694294e+155, "gamma_inc(100.0,   100.0)", TEST_TOL1)
compare(sf.lnbeta(1.0e-8, 1.0e-8)        ,     19.113827924512310617 , "lnbeta(1.0e-8, 1.0e-8)", TEST_TOL0)
compare(sf.lnbeta(1.0e-8, 0.01)          ,     18.420681743788563403 , "lnbeta(1.0e-8, 0.01)", TEST_TOL0)
compare(sf.lnbeta(1.0e-8, 1.0)           ,     18.420680743952365472 , "lnbeta(1.0e-8, 1.0)", TEST_TOL0)
compare(sf.lnbeta(1.0e-8, 10.0)          ,     18.420680715662683009 , "lnbeta(1.0e-8, 10.0)", TEST_TOL0)
compare(sf.lnbeta(1.0e-8, 1000.0)        ,     18.420680669107656949 , "lnbeta(1.0e-8, 1000.0)", TEST_TOL0)
compare(sf.lnbeta(0.1, 0.1)              ,     2.9813614810376273949 , "lnbeta(0.1, 0.1)", TEST_TOL1)
compare(sf.lnbeta(0.1, 1.0)              ,     2.3025850929940456840 , "lnbeta(0.1, 1.0)", TEST_TOL1)
compare(sf.lnbeta(0.1, 100.0)            ,     1.7926462324527931217 , "lnbeta(0.1, 100.0)", TEST_TOL0)
compare(sf.lnbeta(0.1, 1000)             ,     1.5619821298353164928 , "lnbeta(0.1, 1000)", TEST_TOL0)
compare(sf.lnbeta(1.0, 1.00025)          ,     -0.0002499687552073570, "lnbeta(1.0, 1.00025)", TEST_TOL4)
compare(sf.lnbeta(1.0, 1.01)             ,  -0.009950330853168082848 , "lnbeta(1.0, 1.01)", TEST_TOL3)
compare(sf.lnbeta(1.0, 1000.0)           ,     -6.907755278982137052 , "lnbeta(1.0, 1000.0)", TEST_TOL0)
compare(sf.lnbeta(100.0, 100.0)          ,    -139.66525908670663927 , "lnbeta(100.0, 100.0)", TEST_TOL2)
compare(sf.lnbeta(100.0, 1000.0)         ,     -336.4348576477366051 , "lnbeta(100.0, 1000.0)", TEST_TOL0)
compare(sf.lnbeta(100.0, 1.0e+8)         ,    -1482.9339185256447309 , "lnbeta(100.0, 1.0e+8)", TEST_TOL0)
compare(sf.beta(1.0,   1.0)              ,     1.0                   , "beta(1.0,   1.0)", TEST_TOL0)
compare(sf.beta(1.0, 1.001)              ,     0.9990009990009990010 , "beta(1.0, 1.001)", TEST_TOL0)
compare(sf.beta(1.0,   5.0)              ,     0.2                   , "beta(1.0,   5.0)", TEST_TOL1)
compare(sf.beta(1.0,  100.0)             ,     0.01                  , "beta(1.0,  100.0)", TEST_TOL1)
compare(sf.beta(10.0, 100.0)             ,  2.3455339739604649879e-15 , "beta(10.0, 100.0)", TEST_TOL2)
compare(sf.beta(2.5, -0.1)               ,   -11.43621278354402041480, "beta(2.5, -0.1)", TEST_TOL2)
compare(sf.beta(2.5, -1.1)               ,   14.555179906328753255202, "beta(2.5, -1.1)", TEST_TOL2)
compare(sf.beta(-0.25, -0.1)             ,     -13.238937960945229110, "beta(-0.25, -0.1)", TEST_TOL2)
compare(sf.beta(-1.25, -0.1)             ,     -14.298052997820847439, "beta(-1.25, -0.1)", TEST_TOL2)
compare(sf.beta(-100.1, -99.1)           ,  -1.005181917797644630375787297e60, "beta(-100.1, -99.1)", TEST_TOL3)
compare(sf.beta(-100.1, 99.3)            ,  0.0004474258199579694011200969001, "beta(-100.1, 99.3)", TEST_TOL2)
compare(sf.beta(100.1, -99.3)            ,  1.328660939628876472028853747, "beta(100.1, -99.3)", TEST_TOL2)
compare(sf.beta(-100.1, 1.2)             ,  0.00365530364287960795444856281, "beta(-100.1, 1.2)", TEST_TOL3)
compare(sf.beta(100.1, -1.2)             ,  1203.895236907821059270698160, "beta(100.1, -1.2)", TEST_TOL2)
compare(sf.beta(-100.1, -1.2)            ,  -3236.073671884748847700283841, "beta(-100.1, -1.2)", TEST_TOL2)
compare(sf.beta(-100.001, 0.0099)        ,  -853.946649365611147996495177, "beta(-100.001, 0.0099)", TEST_TOL4)
compare(sf.beta(1e-32, 1.5)              ,                       1e32, "beta(1e-32, 1.5)", TEST_TOL2)
compare(sf.beta(1e-6, 0.5)               ,  1000001.386293677092419390336, "beta(1e-6, 0.5)", TEST_TOL2)
compare(sf.beta(-1.5, 0.5)               ,                        0.0, "beta(-1.5, 0.5)", TEST_TOL0)
compare(sf.beta_inc(1.0, 1.0, 0.0)       ,                        0.0, "beta_inc(1.0, 1.0, 0.0)", TEST_TOL2)
compare(sf.beta_inc(1.0, 1.0, 1.0)       ,                        1.0, "beta_inc(1.0, 1.0, 1.0)", TEST_TOL2)
compare(sf.beta_inc(0.1, 0.1, 1.0)       ,                        1.0, "beta_inc(0.1, 0.1, 1.0)", TEST_TOL2)
compare(sf.beta_inc( 1.0,  1.0, 0.5)     ,                        0.5, "beta_inc( 1.0,  1.0, 0.5)", TEST_TOL2)
compare(sf.beta_inc( 0.1,  1.0, 0.5)     ,      0.9330329915368074160, "beta_inc( 0.1,  1.0, 0.5)", TEST_TOL2)
compare(sf.beta_inc(10.0,  1.0, 0.5)     ,   0.0009765625000000000000, "beta_inc(10.0,  1.0, 0.5)", TEST_TOL2)
compare(sf.beta_inc(50.0,  1.0, 0.5)     ,   8.881784197001252323e-16, "beta_inc(50.0,  1.0, 0.5)", TEST_TOL2)
compare(sf.beta_inc( 1.0,  0.1, 0.5)     ,     0.06696700846319258402, "beta_inc( 1.0,  0.1, 0.5)", TEST_TOL2)
compare(sf.beta_inc( 1.0, 10.0, 0.5)     ,     0.99902343750000000000, "beta_inc( 1.0, 10.0, 0.5)", TEST_TOL2)
compare(sf.beta_inc( 1.0, 50.0, 0.5)     ,     0.99999999999999911180, "beta_inc( 1.0, 50.0, 0.5)", TEST_TOL2)
compare(sf.beta_inc( 1.0,  1.0, 0.1)     ,                       0.10, "beta_inc( 1.0,  1.0, 0.1)", TEST_TOL2)
compare(sf.beta_inc( 1.0,  2.0, 0.1)     ,                       0.19, "beta_inc( 1.0,  2.0, 0.1)", TEST_TOL2)
compare(sf.beta_inc( 1.0,  2.0, 0.9)     ,                       0.99, "beta_inc( 1.0,  2.0, 0.9)", TEST_TOL2)
compare(sf.beta_inc(50.0, 60.0, 0.5)     ,      0.8309072939016694143, "beta_inc(50.0, 60.0, 0.5)", TEST_TOL2)
compare(sf.beta_inc(90.0, 90.0, 0.5)     ,                        0.5, "beta_inc(90.0, 90.0, 0.5)", TEST_TOL2)
compare(sf.beta_inc( 500.0,  500.0, 0.6) ,      0.9999999999157549630, "beta_inc( 500.0,  500.0, 0.6)", TEST_TOL2)
compare(sf.beta_inc(5000.0, 5000.0, 0.4) ,   4.518543727260666383e-91, "beta_inc(5000.0, 5000.0, 0.4)", TEST_TOL5)
compare(sf.beta_inc(5000.0, 5000.0, 0.6) ,                        1.0, "beta_inc(5000.0, 5000.0, 0.6)", TEST_TOL2)
compare(sf.beta_inc(5000.0, 2000.0, 0.6) ,   8.445388773903332659e-89, "beta_inc(5000.0, 2000.0, 0.6)", TEST_TOL5)
compare(sf.beta_inc(-0.1, -0.1, 1.0)     ,                        1.0, "beta_inc(-0.1, -0.1, 1.0)", TEST_TOL2)
compare(sf.beta_inc(-0.1, -0.2, 1.0)     ,                        1.0, "beta_inc(-0.1, -0.2, 1.0)", TEST_TOL2)
compare(sf.beta_inc(-0.2, -0.1, 1.0)     ,                        1.0, "beta_inc(-0.2, -0.1, 1.0)", TEST_TOL2)
compare(sf.beta_inc(-0.1, -0.2, 0.5)     ,  0.675252001958389971991335, "beta_inc(-0.1, -0.2, 0.5)", TEST_TOL2)
compare(sf.beta_inc(-0.2, -0.1, 0.5)     ,  0.324747998041610028008665, "beta_inc(-0.2, -0.1, 0.5)", TEST_TOL2)
compare(sf.beta_inc(-0.1, -0.1, 0.0)     ,                        0.0, "beta_inc(-0.1, -0.1, 0.0)", TEST_TOL2)
compare(sf.beta_inc(-0.1, -0.2, 0.0)     ,                        0.0, "beta_inc(-0.1, -0.2, 0.0)", TEST_TOL2)
compare(sf.beta_inc(-0.2, -0.1, 0.0)     ,                        0.0, "beta_inc(-0.2, -0.1, 0.0)", TEST_TOL2)
compare(sf.beta_inc(-0.1, -0.2, 0.3)     ,      0.7469186777964287252, "beta_inc(-0.1, -0.2, 0.3)", TEST_TOL2)
compare(sf.beta_inc(-0.2, -0.1, 0.3)     ,      0.3995299653262016818, "beta_inc(-0.2, -0.1, 0.3)", TEST_TOL2)
--[[
-- FIXME: the following bug should have been fixed in gsl 1.15; 
-- however it only works if we disable the error handler.
compare(sf.beta_inc(0.5, 101.5, 0.999457),                        1.0, "beta_inc(0.5, 101.5, 0.999457)", TEST_TOL2)
--]]
