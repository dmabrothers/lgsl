local gsl = require("lgsl.gsl")
local sf= require("lgsl.sf")
local GSL_DBL_EPSILON, GSL_SQRT_DBL_EPSILON, GSL_LOG_DBL_MAX = 2.2204460492503131e-16, 1.4901161193847656e-08, 7.0978271289338397e+02
local function sprintf(...) io.write(string.format(...)) end
local sqrt, log, exp, M_PI, M_PI_2, DBL_MAX = math.sqrt, math.log, math.exp, math.pi, math.pi/2, 1.7976931348623157E+308
local M_E, M_LN2 = math.exp(1), math.log(2)
local function compare(val, ref, name, eps)
  eps = eps or 1e-9
  local inc = 0
  if val==0 or ref==0 then inc = 1 end
  if gsl.gsl_fcmp(val+inc,ref+inc,eps*100)==0 then
    sprintf("Pass %-30s: % .15e\n", name, ref,"\n")
  else
    sprintf("Fail %-30s: % .15e ~= % .15e\n", name, val, ref)
  end
end
local TEST_TOL0 = (2.0*GSL_DBL_EPSILON)
local TEST_TOL1 = (16.0*GSL_DBL_EPSILON)
local TEST_TOL2 = (256.0*GSL_DBL_EPSILON)
local TEST_TOL3 = (2048.0*GSL_DBL_EPSILON)
local TEST_TOL4 = (16384.0*GSL_DBL_EPSILON)
local TEST_TOL5 = (131072.0*GSL_DBL_EPSILON)
local TEST_TOL6 = (1048576.0*GSL_DBL_EPSILON)
local TEST_SQRT_TOL0 = (2.0*GSL_SQRT_DBL_EPSILON)
local TEST_SNGL = (1.0e-06)
compare(sf.clausen(M_PI/20.0)            ,         0.4478882448133546, "clausen(M_PI/20.0)", TEST_TOL0)
compare(sf.clausen(M_PI/6.0)             ,         0.8643791310538927, "clausen(M_PI/6.0)", TEST_TOL0)
compare(sf.clausen(M_PI/3.0)             ,         1.0149416064096535, "clausen(M_PI/3.0)", TEST_TOL0)
compare(sf.clausen(  2.0*M_PI + M_PI/3.0),         1.0149416064096535, "clausen(  2.0*M_PI + M_PI/3.0)", TEST_TOL0)
compare(sf.clausen(100.0*M_PI + M_PI/3.0),         1.0149416064096535, "clausen(100.0*M_PI + M_PI/3.0)", TEST_TOL0)
compare(sf.coupling_3j(0, 1, 1, 0,  1, -1),              sqrt(1.0/2.0), "coupling_3j(0, 1, 1, 0,  1, -1)", TEST_TOL0)
compare(sf.coupling_3j(1, 1, 2, 1, -1,  0),              sqrt(1.0/6.0), "coupling_3j(1, 1, 2, 1, -1,  0)", TEST_TOL0)
compare(sf.coupling_3j(2, 4, 6, 0,  2, -2),            sqrt(8.0/105.0), "coupling_3j(2, 4, 6, 0,  2, -2)", TEST_TOL0)
compare(sf.coupling_3j(4, 4, 8, 0,  0,  0),             sqrt(2.0/35.0), "coupling_3j(4, 4, 8, 0,  0,  0)", TEST_TOL0)
compare(sf.coupling_3j(4, 4, 8, 2, -2,  0),     2.0/3.0*sqrt(2.0/35.0), "coupling_3j(4, 4, 8, 2, -2,  0)", TEST_TOL2)
compare(sf.coupling_3j(4, 4, 8, 4, -4,  0),       1.0/(3.0*sqrt(70.0)), "coupling_3j(4, 4, 8, 4, -4,  0)", TEST_TOL2)
compare(sf.coupling_3j(1, 1, 2, 2, -1, 0),                          0, "coupling_3j(1, 1, 2, 2, -1, 0)", 0)
compare(sf.coupling_3j(1, 1, 2, 1, -2, 0),                          0, "coupling_3j(1, 1, 2, 1, -2, 0)", 0)
compare(sf.coupling_3j(1, 1, 2, 1, -1, 3),                          0, "coupling_3j(1, 1, 2, 1, -1, 3)", 0)
compare(sf.coupling_3j(1, 1, 3, 1, -1, 0),                          0, "coupling_3j(1, 1, 3, 1, -1, 0)", 0)
compare(sf.coupling_3j(1, 4, 2, 1, -1, 0),                          0, "coupling_3j(1, 4, 2, 1, -1, 0)", 0)
compare(sf.coupling_3j(4, 1, 2, 1, -1, 0),                          0, "coupling_3j(4, 1, 2, 1, -1, 0)", 0)
compare(sf.coupling_3j(2*13, 2*13, 2*13, 0, 0, 0),                          0, "coupling_3j(2*13, 2*13, 2*13, 0, 0, 0)", 0)
compare(sf.coupling_3j(2*2, 2*17, 2*18, 0, 0, 0),                          0, "coupling_3j(2*2, 2*17, 2*18, 0, 0, 0)", 0)
compare(sf.coupling_3j(2*203, 2*203, 2*203, 0, 0, 0),                          0, "coupling_3j(2*203, 2*203, 2*203, 0, 0, 0)", 0)
compare(sf.coupling_3j(2*249.0, 2*248.0, 2*2.0, 2*5.0, 2*(-6.0), 2*1.0),  0.0228787564223517967033998, "coupling_3j(2*249.0, 2*248.0, 2*2.0, 2*5.0, 2*(-6.0), 2*1.0)", TEST_TOL3)
compare(sf.coupling_3j(2*248.0, 2*247.0, 2*2.0, 2*5.0, 2*(-6.0), 2*1.0),  -0.022926660587726369939271424097, "coupling_3j(2*248.0, 2*247.0, 2*2.0, 2*5.0, 2*(-6.0), 2*1.0)", TEST_TOL3)
compare(sf.coupling_6j(2, 2, 4, 2, 2, 2) ,                    1.0/6.0, "coupling_6j(2, 2, 4, 2, 2, 2)", TEST_TOL0)
compare(sf.coupling_6j(4, 4, 2, 4, 4, 4) ,                  -1.0/10.0, "coupling_6j(4, 4, 2, 4, 4, 4)", TEST_TOL0)
compare(sf.coupling_6j(4, 4, 2, 4, 4, 2) ,                    1.0/6.0, "coupling_6j(4, 4, 2, 4, 4, 2)", TEST_TOL0)
compare(sf.coupling_6j(4, 4, 2, 2, 2, 2) ,             -0.5/sqrt(5.0), "coupling_6j(4, 4, 2, 2, 2, 2)", TEST_TOL0)
compare(sf.coupling_6j(4, 4, 4, 2, 2, 2) ,         sqrt(7.0/3.0)/10.0, "coupling_6j(4, 4, 4, 2, 2, 2)", TEST_TOL0)
compare(sf.coupling_6j(6, 6, 6, 4, 4, 4) ,        -sqrt(3.0/5.0)/14.0, "coupling_6j(6, 6, 6, 4, 4, 4)", TEST_TOL0)
compare(sf.coupling_6j(6, 6, 6, 4, 4, 2) ,         -sqrt(3.0/5.0)/7.0, "coupling_6j(6, 6, 6, 4, 4, 2)", TEST_TOL0)
compare(sf.coupling_6j(1, 0, 1, 0, 1, 0) ,             -sqrt(1.0/2.0), "coupling_6j(1, 0, 1, 0, 1, 0)", TEST_TOL0)
compare(sf.coupling_6j(1, 0, 1, 1, 0, 1) ,                   -1.0/2.0, "coupling_6j(1, 0, 1, 1, 0, 1)", TEST_TOL0)
compare(sf.coupling_6j(2, 2, 4, 2, 2, 7) ,                          0, "coupling_6j(2, 2, 4, 2, 2, 7)", 0)
compare(sf.coupling_6j(2, 2, 4, 2, 7, 2) ,                          0, "coupling_6j(2, 2, 4, 2, 7, 2)", 0)
compare(sf.coupling_6j(2, 2, 4, 7, 2, 2) ,                          0, "coupling_6j(2, 2, 4, 7, 2, 2)", 0)
compare(sf.coupling_6j(2, 2, 7, 2, 2, 2) ,                          0, "coupling_6j(2, 2, 7, 2, 2, 2)", 0)
compare(sf.coupling_6j(2, 7, 4, 2, 2, 2) ,                          0, "coupling_6j(2, 7, 4, 2, 2, 2)", 0)
compare(sf.coupling_6j(7, 2, 4, 2, 2, 2) ,                          0, "coupling_6j(7, 2, 4, 2, 2, 2)", 0)
compare(sf.coupling_6j(0, 2, 2, 44, 43, 43),                          0, "coupling_6j(0, 2, 2, 44, 43, 43)", 0)
compare(sf.coupling_6j(1, 1, 1, 0, 1, 1) ,                          0, "coupling_6j(1, 1, 1, 0, 1, 1)", 0)
compare(sf.coupling_6j(1, 1, 1, 1, 0, 1) ,                          0, "coupling_6j(1, 1, 1, 1, 0, 1)", 0)
compare(sf.coupling_6j(1, 1, 1, 1, 1, 0) ,                          0, "coupling_6j(1, 1, 1, 1, 1, 0)", 0)
compare(sf.coupling_9j(4, 2,  4, 3, 3, 2, 1, 1, 2),        -sqrt(1.0/6.0)/10.0, "coupling_9j(4, 2,  4, 3, 3, 2, 1, 1, 2)", TEST_TOL2)
compare(sf.coupling_9j(8, 4, 10, 7, 3, 8, 1, 1, 2),         sqrt(7.0/3.0)/60.0, "coupling_9j(8, 4, 10, 7, 3, 8, 1, 1, 2)", TEST_TOL2)
compare(sf.coupling_9j(10, 2, 4, 3, 3, 2, 1, 1, 2),                          0, "coupling_9j(10, 2, 4, 3, 3, 2, 1, 1, 2)", 0)
compare(sf.coupling_9j(4, 10, 4, 3, 3, 2, 1, 1, 2),                          0, "coupling_9j(4, 10, 4, 3, 3, 2, 1, 1, 2)", 0)
compare(sf.coupling_9j(4, 2, 10, 3, 3, 2, 1, 1, 2),                          0, "coupling_9j(4, 2, 10, 3, 3, 2, 1, 1, 2)", 0)
compare(sf.coupling_9j(4, 2, 4, 10, 3, 2, 1, 1, 2),                          0, "coupling_9j(4, 2, 4, 10, 3, 2, 1, 1, 2)", 0)
compare(sf.coupling_9j(4, 2, 4, 3, 10, 2, 1, 1, 2),                          0, "coupling_9j(4, 2, 4, 3, 10, 2, 1, 1, 2)", 0)
compare(sf.coupling_9j(4, 2, 4, 3, 3, 10, 1, 1, 2),                          0, "coupling_9j(4, 2, 4, 3, 3, 10, 1, 1, 2)", 0)
compare(sf.coupling_9j(4, 2, 4, 3, 3, 2, 10, 1, 2),                          0, "coupling_9j(4, 2, 4, 3, 3, 2, 10, 1, 2)", 0)
compare(sf.coupling_9j(4, 2, 4, 3, 3, 2, 1, 10, 2),                          0, "coupling_9j(4, 2, 4, 3, 3, 2, 1, 10, 2)", 0)
compare(sf.coupling_9j(4, 2, 4, 3, 3, 2, 1, 1, 10),                          0, "coupling_9j(4, 2, 4, 3, 3, 2, 1, 1, 10)", 0)
compare(sf.coupling_9j(1, 1, 1, 1, 1, 1, 0, 0, 0),                          0, "coupling_9j(1, 1, 1, 1, 1, 1, 0, 0, 0)", 0)
compare(sf.coupling_9j(1, 1, 0, 1, 1, 0, 1, 1, 0),                          0, "coupling_9j(1, 1, 0, 1, 1, 0, 1, 1, 0)", 0)
compare(sf.dawson(1.0e-15)               ,                    1.0e-15, "dawson(1.0e-15)", TEST_TOL0)
compare(sf.dawson(0.5)                   ,      0.4244363835020222959, "dawson(0.5)", TEST_TOL0)
compare(sf.dawson(2.0)                   ,     0.30134038892379196603, "dawson(2.0)", TEST_TOL0)
compare(sf.dawson(1000.0)                ,   0.0005000002500003750009, "dawson(1000.0)", TEST_TOL0)
local x = 0.2*DBL_MAX
compare(sf.ellint_Kcomp( 0.99)     ,      3.3566005233611923760, "ellint_Kcomp( 0.99)", TEST_TOL0)
compare(sf.ellint_Kcomp( 0.50)     ,      1.6857503548125960429, "ellint_Kcomp( 0.50)", TEST_TOL0)
compare(sf.ellint_Kcomp(0.010)     ,      1.5708355989121522360, "ellint_Kcomp(0.010)", TEST_TOL0)
compare(sf.ellint_Kcomp( 0.99999999906867742538),     11.4369284843320018031, "ellint_Kcomp( 0.99999999906867742538)", TEST_SNGL)
compare(sf.ellint_Ecomp(0.99)      ,      1.0284758090288040010, "ellint_Ecomp(0.99)", TEST_TOL0)
compare(sf.ellint_Ecomp(0.50)      ,      1.4674622093394271555, "ellint_Ecomp(0.50)", TEST_TOL0)
compare(sf.ellint_Ecomp(0.01)      ,      1.5707570561503852873, "ellint_Ecomp(0.01)", TEST_TOL0)
compare(sf.ellint_Pcomp(0.99, 0.1) ,  3.13792612351836506315593, "ellint_Pcomp(0.99, 0.1)", TEST_TOL0)
compare(sf.ellint_Pcomp(0.50, 0.1) ,  1.60455249360848890075108, "ellint_Pcomp(0.50, 0.1)", TEST_TOL0)
compare(sf.ellint_Pcomp(0.01, 0.1) ,  1.49773208536003801277453, "ellint_Pcomp(0.01, 0.1)", TEST_TOL0)
compare(sf.ellint_F(M_PI/3.0, 0.99),      1.3065333392738766762, "ellint_F(M_PI/3.0, 0.99)", TEST_TOL0)
compare(sf.ellint_F(M_PI/3.0, 0.50),      1.0895506700518854093, "ellint_F(M_PI/3.0, 0.50)", TEST_TOL0)
compare(sf.ellint_F(M_PI/3.0, 0.01),      1.0472129063770918952, "ellint_F(M_PI/3.0, 0.01)", TEST_TOL0)
compare(sf.ellint_E(M_PI/3.0, 0.99),      0.8704819220377943536, "ellint_E(M_PI/3.0, 0.99)", TEST_TOL0)
compare(sf.ellint_E(M_PI/3.0, 0.50),      1.0075555551444720293, "ellint_E(M_PI/3.0, 0.50)", TEST_TOL0)
compare(sf.ellint_E(M_PI/3.0, 0.01),      1.0471821963889481104, "ellint_E(M_PI/3.0, 0.01)", TEST_TOL0)
compare(sf.ellint_P(M_PI/3.0, 0.99, 0.5),      1.1288726598764099882, "ellint_P(M_PI/3.0, 0.99, 0.5)", TEST_TOL0)
compare(sf.ellint_P(M_PI/3.0, 0.50, 0.5),      0.9570574331323584890, "ellint_P(M_PI/3.0, 0.50, 0.5)", TEST_TOL0)
compare(sf.ellint_P(M_PI/3.0, 0.01, 0.5),      0.9228868127118118465, "ellint_P(M_PI/3.0, 0.01, 0.5)", TEST_TOL0)
compare(sf.ellint_RF(5.0e-11, 1.0e-10, 1.0),          12.36441982979439, "ellint_RF(5.0e-11, 1.0e-10, 1.0)", TEST_TOL0)
compare(sf.ellint_RF(1.0, 2.0, 3.0),         0.7269459354689082, "ellint_RF(1.0, 2.0, 3.0)", TEST_TOL0)
compare(sf.ellint_RD(5.0e-11, 1.0e-10, 1.0),        34.0932594919337362, "ellint_RD(5.0e-11, 1.0e-10, 1.0)", TEST_TOL0)
compare(sf.ellint_RD(1.0, 2.0, 3.0),         0.2904602810289906, "ellint_RD(1.0, 2.0, 3.0)", TEST_TOL0)
compare(sf.ellint_RC(1.0, 2.0)     ,         0.7853981633974482, "ellint_RC(1.0, 2.0)", TEST_TOL0)
compare(sf.ellint_RJ(2.0, 3.0, 4.0, 5.0),         0.1429757966715675, "ellint_RJ(2.0, 3.0, 4.0, 5.0)", TEST_TOL0)
compare(sf.ellint_E(M_PI/2.0, 0.99),  1.02847580902880400098389, "ellint_E(M_PI/2.0, 0.99)", TEST_TOL0)
compare(sf.ellint_E(M_PI/2.0, 0.50),  1.46746220933942715545980, "ellint_E(M_PI/2.0, 0.50)", TEST_TOL0)
compare(sf.ellint_E(M_PI/2.0, 0.01),  1.57075705615038528733708, "ellint_E(M_PI/2.0, 0.01)", TEST_TOL0)
compare(sf.ellint_E(2*M_PI/3.0, 0.99),  1.18646969601981364833972, "ellint_E(2*M_PI/3.0, 0.99)", TEST_TOL1)
compare(sf.ellint_E(2*M_PI/3.0, 0.50),  1.92736886353438228163734, "ellint_E(2*M_PI/3.0, 0.50)", TEST_TOL0)
compare(sf.ellint_E(2*M_PI/3.0, 0.01),  2.09433191591182246425715, "ellint_E(2*M_PI/3.0, 0.01)", TEST_TOL0)
compare(sf.ellint_E(M_PI, 0.99)    ,  2.05695161805760800196777, "ellint_E(M_PI, 0.99)", TEST_TOL0)
compare(sf.ellint_E(M_PI, 0.50)    ,  2.93492441867885431091959, "ellint_E(M_PI, 0.50)", TEST_TOL0)
compare(sf.ellint_E(M_PI, 0.01)    ,  3.14151411230077057467416, "ellint_E(M_PI, 0.01)", TEST_TOL0)
compare(sf.ellint_E(4*M_PI/3, 0.99),  2.92743354009540235559582, "ellint_E(4*M_PI/3, 0.99)", TEST_TOL0)
compare(sf.ellint_E(4*M_PI/3, 0.50),  3.94247997382332634020184, "ellint_E(4*M_PI/3, 0.50)", TEST_TOL0)
compare(sf.ellint_E(4*M_PI/3, 0.01),  4.18869630868971868509117, "ellint_E(4*M_PI/3, 0.01)", TEST_TOL0)
compare(sf.ellint_E(3*M_PI/2.0, 0.99),  3.08542742708641200295166, "ellint_E(3*M_PI/2.0, 0.99)", TEST_TOL0)
compare(sf.ellint_E(3*M_PI/2.0, 0.50),  4.40238662801828146637939, "ellint_E(3*M_PI/2.0, 0.50)", TEST_TOL0)
compare(sf.ellint_E(3*M_PI/2.0, 0.01),  4.71227116845115586201123, "ellint_E(3*M_PI/2.0, 0.01)", TEST_TOL0)
compare(sf.ellint_E(5*M_PI/3, 0.99),  3.24342131407742165030750, "ellint_E(5*M_PI/3, 0.99)", TEST_TOL1)
compare(sf.ellint_E(5*M_PI/3, 0.50),  4.86229328221323659255693, "ellint_E(5*M_PI/3, 0.50)", TEST_TOL0)
compare(sf.ellint_E(5*M_PI/3, 0.01),  5.23584602821259303893130, "ellint_E(5*M_PI/3, 0.01)", TEST_TOL0)
compare(sf.ellint_E(2*M_PI, 0.99)  ,  4.11390323611521600393555, "ellint_E(2*M_PI, 0.99)", TEST_TOL0)
compare(sf.ellint_E(2*M_PI, 0.50)  ,  5.86984883735770862183918, "ellint_E(2*M_PI, 0.50)", TEST_TOL0)
compare(sf.ellint_E(2*M_PI, 0.01)  ,  6.28302822460154114934831, "ellint_E(2*M_PI, 0.01)", TEST_TOL0)
compare(sf.ellint_E(7*M_PI/3.0, 0.99),  4.98438515815301035756360, "ellint_E(7*M_PI/3.0, 0.99)", TEST_TOL0)
compare(sf.ellint_E(7*M_PI/3.0, 0.50),  6.87740439250218065112143, "ellint_E(7*M_PI/3.0, 0.50)", TEST_TOL0)
compare(sf.ellint_E(7*M_PI/3.0, 0.01),  7.33021042099048925976532, "ellint_E(7*M_PI/3.0, 0.01)", TEST_TOL0)
compare(sf.ellint_E(-M_PI/2.0, 0.99),  -1.02847580902880400098389, "ellint_E(-M_PI/2.0, 0.99)", TEST_TOL0)
compare(sf.ellint_E(-M_PI/2.0, 0.50),  -1.46746220933942715545980, "ellint_E(-M_PI/2.0, 0.50)", TEST_TOL0)
compare(sf.ellint_E(-M_PI/2.0, 0.01),  -1.57075705615038528733708, "ellint_E(-M_PI/2.0, 0.01)", TEST_TOL0)
compare(sf.ellint_E(-2*M_PI/3.0, 0.99),  -1.18646969601981364833972, "ellint_E(-2*M_PI/3.0, 0.99)", TEST_TOL1)
compare(sf.ellint_E(-2*M_PI/3.0, 0.50),  -1.92736886353438228163734, "ellint_E(-2*M_PI/3.0, 0.50)", TEST_TOL0)
compare(sf.ellint_E(-2*M_PI/3.0, 0.01),  -2.09433191591182246425715, "ellint_E(-2*M_PI/3.0, 0.01)", TEST_TOL0)
compare(sf.ellint_E(-M_PI, 0.99)   ,  -2.05695161805760800196777, "ellint_E(-M_PI, 0.99)", TEST_TOL0)
compare(sf.ellint_E(-M_PI, 0.50)   ,  -2.93492441867885431091959, "ellint_E(-M_PI, 0.50)", TEST_TOL0)
compare(sf.ellint_E(-M_PI, 0.01)   ,  -3.14151411230077057467416, "ellint_E(-M_PI, 0.01)", TEST_TOL0)
compare(sf.ellint_E(-4*M_PI/3, 0.99),  -2.92743354009540235559582, "ellint_E(-4*M_PI/3, 0.99)", TEST_TOL0)
compare(sf.ellint_E(-4*M_PI/3, 0.50),  -3.94247997382332634020184, "ellint_E(-4*M_PI/3, 0.50)", TEST_TOL0)
compare(sf.ellint_E(-4*M_PI/3, 0.01),  -4.18869630868971868509117, "ellint_E(-4*M_PI/3, 0.01)", TEST_TOL0)
compare(sf.ellint_E(-3*M_PI/2.0, 0.99),  -3.08542742708641200295166, "ellint_E(-3*M_PI/2.0, 0.99)", TEST_TOL0)
compare(sf.ellint_E(-3*M_PI/2.0, 0.50),  -4.40238662801828146637939, "ellint_E(-3*M_PI/2.0, 0.50)", TEST_TOL0)
compare(sf.ellint_E(-3*M_PI/2.0, 0.01),  -4.71227116845115586201123, "ellint_E(-3*M_PI/2.0, 0.01)", TEST_TOL0)
compare(sf.ellint_E(-5*M_PI/3, 0.99),  -3.24342131407742165030750, "ellint_E(-5*M_PI/3, 0.99)", TEST_TOL1)
compare(sf.ellint_E(-5*M_PI/3, 0.50),  -4.86229328221323659255693, "ellint_E(-5*M_PI/3, 0.50)", TEST_TOL0)
compare(sf.ellint_E(-5*M_PI/3, 0.01),  -5.23584602821259303893130, "ellint_E(-5*M_PI/3, 0.01)", TEST_TOL0)
compare(sf.ellint_E(-2*M_PI, 0.99) ,  -4.11390323611521600393555, "ellint_E(-2*M_PI, 0.99)", TEST_TOL0)
compare(sf.ellint_E(-2*M_PI, 0.50) ,  -5.86984883735770862183918, "ellint_E(-2*M_PI, 0.50)", TEST_TOL0)
compare(sf.ellint_E(-2*M_PI, 0.01) ,  -6.28302822460154114934831, "ellint_E(-2*M_PI, 0.01)", TEST_TOL0)
compare(sf.ellint_E(-7*M_PI/3.0, 0.99),  -4.98438515815301035756360, "ellint_E(-7*M_PI/3.0, 0.99)", TEST_TOL0)
compare(sf.ellint_E(-7*M_PI/3.0, 0.50),  -6.87740439250218065112143, "ellint_E(-7*M_PI/3.0, 0.50)", TEST_TOL0)
compare(sf.ellint_E(-7*M_PI/3.0, 0.01),  -7.33021042099048925976532, "ellint_E(-7*M_PI/3.0, 0.01)", TEST_TOL0)
compare(sf.ellint_F(M_PI/2.0, 0.99),  3.35660052336119237603347, "ellint_F(M_PI/2.0, 0.99)", TEST_TOL0)
compare(sf.ellint_F(M_PI/2.0, 0.50),  1.68575035481259604287120, "ellint_F(M_PI/2.0, 0.50)", TEST_TOL0)
compare(sf.ellint_F(M_PI/2.0, 0.01),  1.57083559891215223602641, "ellint_F(M_PI/2.0, 0.01)", TEST_TOL0)
compare(sf.ellint_F(2*M_PI/3.0, 0.99),  5.40666770744850807588478, "ellint_F(2*M_PI/3.0, 0.99)", TEST_TOL0)
compare(sf.ellint_F(2*M_PI/3.0, 0.50),  2.28195003957330667648585, "ellint_F(2*M_PI/3.0, 0.50)", TEST_TOL0)
compare(sf.ellint_F(2*M_PI/3.0, 0.01),  2.09445829144721257687207, "ellint_F(2*M_PI/3.0, 0.01)", TEST_TOL0)
compare(sf.ellint_F(M_PI, 0.99)    ,  6.71320104672238475206694, "ellint_F(M_PI, 0.99)", TEST_TOL0)
compare(sf.ellint_F(M_PI, 0.50)    ,  3.37150070962519208574241, "ellint_F(M_PI, 0.50)", TEST_TOL0)
compare(sf.ellint_F(M_PI, 0.01)    ,  3.14167119782430447205281, "ellint_F(M_PI, 0.01)", TEST_TOL0)
compare(sf.ellint_F(4*M_PI/3, 0.99),  8.01973438599626142824910, "ellint_F(4*M_PI/3, 0.99)", TEST_TOL0)
compare(sf.ellint_F(4*M_PI/3, 0.50),  4.46105137967707749499897, "ellint_F(4*M_PI/3, 0.50)", TEST_TOL0)
compare(sf.ellint_F(4*M_PI/3, 0.01),  4.18888410420139636723356, "ellint_F(4*M_PI/3, 0.01)", TEST_TOL0)
compare(sf.ellint_F(3*M_PI/2.0, 0.99),  10.0698015700835771281004, "ellint_F(3*M_PI/2.0, 0.99)", TEST_TOL0)
compare(sf.ellint_F(3*M_PI/2.0, 0.50),  5.05725106443778812861361, "ellint_F(3*M_PI/2.0, 0.50)", TEST_TOL0)
compare(sf.ellint_F(3*M_PI/2.0, 0.01),  4.71250679673645670807922, "ellint_F(3*M_PI/2.0, 0.01)", TEST_TOL0)
compare(sf.ellint_F(5*M_PI/3, 0.99),  12.1198687541708928279517, "ellint_F(5*M_PI/3, 0.99)", TEST_TOL0)
compare(sf.ellint_F(5*M_PI/3, 0.50),  5.65345074919849876222825, "ellint_F(5*M_PI/3, 0.50)", TEST_TOL0)
compare(sf.ellint_F(5*M_PI/3, 0.01),  5.23612948927151704892488, "ellint_F(5*M_PI/3, 0.01)", TEST_TOL0)
compare(sf.ellint_F(2*M_PI, 0.99)  ,  13.4264020934447695041339, "ellint_F(2*M_PI, 0.99)", TEST_TOL0)
compare(sf.ellint_F(2*M_PI, 0.50)  ,  6.74300141925038417148481, "ellint_F(2*M_PI, 0.50)", TEST_TOL0)
compare(sf.ellint_F(2*M_PI, 0.01)  ,  6.28334239564860894410562, "ellint_F(2*M_PI, 0.01)", TEST_TOL0)
compare(sf.ellint_F(7*M_PI/3.0, 0.99),  14.7329354327186461803160, "ellint_F(7*M_PI/3.0, 0.99)", TEST_TOL0)
compare(sf.ellint_F(7*M_PI/3.0, 0.50),  7.83255208930226958074138, "ellint_F(7*M_PI/3.0, 0.50)", TEST_TOL0)
compare(sf.ellint_F(7*M_PI/3.0, 0.01),  7.33055530202570083928637, "ellint_F(7*M_PI/3.0, 0.01)", TEST_TOL0)
compare(sf.ellint_F(-M_PI/2.0, 0.99),  -3.35660052336119237603347, "ellint_F(-M_PI/2.0, 0.99)", TEST_TOL0)
compare(sf.ellint_F(-M_PI/2.0, 0.50),  -1.68575035481259604287120, "ellint_F(-M_PI/2.0, 0.50)", TEST_TOL0)
compare(sf.ellint_F(-M_PI/2.0, 0.01),  -1.57083559891215223602641, "ellint_F(-M_PI/2.0, 0.01)", TEST_TOL0)
compare(sf.ellint_F(-2*M_PI/3.0, 0.99),  -5.40666770744850807588478, "ellint_F(-2*M_PI/3.0, 0.99)", TEST_TOL0)
compare(sf.ellint_F(-2*M_PI/3.0, 0.50),  -2.28195003957330667648585, "ellint_F(-2*M_PI/3.0, 0.50)", TEST_TOL0)
compare(sf.ellint_F(-2*M_PI/3.0, 0.01),  -2.09445829144721257687207, "ellint_F(-2*M_PI/3.0, 0.01)", TEST_TOL0)
compare(sf.ellint_F(-M_PI, 0.99)   ,  -6.71320104672238475206694, "ellint_F(-M_PI, 0.99)", TEST_TOL0)
compare(sf.ellint_F(-M_PI, 0.50)   ,  -3.37150070962519208574241, "ellint_F(-M_PI, 0.50)", TEST_TOL0)
compare(sf.ellint_F(-M_PI, 0.01)   ,  -3.14167119782430447205281, "ellint_F(-M_PI, 0.01)", TEST_TOL0)
compare(sf.ellint_F(-4*M_PI/3, 0.99),  -8.01973438599626142824910, "ellint_F(-4*M_PI/3, 0.99)", TEST_TOL0)
compare(sf.ellint_F(-4*M_PI/3, 0.50),  -4.46105137967707749499897, "ellint_F(-4*M_PI/3, 0.50)", TEST_TOL0)
compare(sf.ellint_F(-4*M_PI/3, 0.01),  -4.18888410420139636723356, "ellint_F(-4*M_PI/3, 0.01)", TEST_TOL0)
compare(sf.ellint_F(-3*M_PI/2.0, 0.99),  -10.0698015700835771281004, "ellint_F(-3*M_PI/2.0, 0.99)", TEST_TOL0)
compare(sf.ellint_F(-3*M_PI/2.0, 0.50),  -5.05725106443778812861361, "ellint_F(-3*M_PI/2.0, 0.50)", TEST_TOL0)
compare(sf.ellint_F(-3*M_PI/2.0, 0.01),  -4.71250679673645670807922, "ellint_F(-3*M_PI/2.0, 0.01)", TEST_TOL0)
compare(sf.ellint_F(-5*M_PI/3, 0.99),  -12.1198687541708928279517, "ellint_F(-5*M_PI/3, 0.99)", TEST_TOL0)
compare(sf.ellint_F(-5*M_PI/3, 0.50),  -5.65345074919849876222825, "ellint_F(-5*M_PI/3, 0.50)", TEST_TOL0)
compare(sf.ellint_F(-5*M_PI/3, 0.01),  -5.23612948927151704892488, "ellint_F(-5*M_PI/3, 0.01)", TEST_TOL0)
compare(sf.ellint_F(-2*M_PI, 0.99) ,  -13.4264020934447695041339, "ellint_F(-2*M_PI, 0.99)", TEST_TOL0)
compare(sf.ellint_F(-2*M_PI, 0.50) ,  -6.74300141925038417148481, "ellint_F(-2*M_PI, 0.50)", TEST_TOL0)
compare(sf.ellint_F(-2*M_PI, 0.01) ,  -6.28334239564860894410562, "ellint_F(-2*M_PI, 0.01)", TEST_TOL0)
compare(sf.ellint_F(-7*M_PI/3.0, 0.99),  -14.7329354327186461803160, "ellint_F(-7*M_PI/3.0, 0.99)", TEST_TOL0)
compare(sf.ellint_F(-7*M_PI/3.0, 0.50),  -7.83255208930226958074138, "ellint_F(-7*M_PI/3.0, 0.50)", TEST_TOL0)
compare(sf.ellint_F(-7*M_PI/3.0, 0.01),  -7.33055530202570083928637, "ellint_F(-7*M_PI/3.0, 0.01)", TEST_TOL0)
compare(sf.ellint_P(M_PI/2.0, 0.99, -0.1),  3.61678162163246646783050, "ellint_P(M_PI/2.0, 0.99, -0.1)", TEST_TOL0)
compare(sf.ellint_P(M_PI/2.0, 0.50, -0.1),  1.78030349465454812629168, "ellint_P(M_PI/2.0, 0.50, -0.1)", TEST_TOL0)
compare(sf.ellint_P(M_PI/2.0, 0.01, -0.1),  1.65580719756898353270922, "ellint_P(M_PI/2.0, 0.01, -0.1)", TEST_TOL0)
compare(sf.ellint_P(2*M_PI/3.0, 0.99, -0.1),  5.88008918207571119911983, "ellint_P(2*M_PI/3.0, 0.99, -0.1)", TEST_TOL0)
compare(sf.ellint_P(2*M_PI/3.0, 0.50, -0.1),  2.43655207300356008717867, "ellint_P(2*M_PI/3.0, 0.50, -0.1)", TEST_TOL0)
compare(sf.ellint_P(2*M_PI/3.0, 0.01, -0.1),  2.23211110528200554950903, "ellint_P(2*M_PI/3.0, 0.01, -0.1)", TEST_TOL0)
compare(sf.ellint_P(M_PI, 0.99, -0.1),  7.23356324326493293566099, "ellint_P(M_PI, 0.99, -0.1)", TEST_TOL0)
compare(sf.ellint_P(M_PI, 0.50, -0.1),  3.56060698930909625258336, "ellint_P(M_PI, 0.50, -0.1)", TEST_TOL0)
compare(sf.ellint_P(M_PI, 0.01, -0.1),  3.31161439513796706541844, "ellint_P(M_PI, 0.01, -0.1)", TEST_TOL0)
compare(sf.ellint_P(4*M_PI/3, 0.99, -0.1),  8.58703730445415467220216, "ellint_P(4*M_PI/3, 0.99, -0.1)", TEST_TOL0)
compare(sf.ellint_P(4*M_PI/3, 0.50, -0.1),  4.68466190561463241798805, "ellint_P(4*M_PI/3, 0.50, -0.1)", TEST_TOL0)
compare(sf.ellint_P(4*M_PI/3, 0.01, -0.1),  4.39111768499392858132786, "ellint_P(4*M_PI/3, 0.01, -0.1)", TEST_TOL0)
compare(sf.ellint_P(3*M_PI/2.0, 0.99, -0.1),  10.8503448648973994034915, "ellint_P(3*M_PI/2.0, 0.99, -0.1)", TEST_TOL0)
compare(sf.ellint_P(3*M_PI/2.0, 0.50, -0.1),  5.34091048396364437887504, "ellint_P(3*M_PI/2.0, 0.50, -0.1)", TEST_TOL0)
compare(sf.ellint_P(3*M_PI/2.0, 0.01, -0.1),  4.96742159270695059812767, "ellint_P(3*M_PI/2.0, 0.01, -0.1)", TEST_TOL0)
compare(sf.ellint_P(5*M_PI/3, 0.99, -0.1),  13.1136524253406441347808, "ellint_P(5*M_PI/3, 0.99, -0.1)", TEST_TOL0)
compare(sf.ellint_P(5*M_PI/3, 0.50, -0.1),  5.99715906231265633976204, "ellint_P(5*M_PI/3, 0.50, -0.1)", TEST_TOL0)
compare(sf.ellint_P(5*M_PI/3, 0.01, -0.1),  5.54372550041997261492747, "ellint_P(5*M_PI/3, 0.01, -0.1)", TEST_TOL0)
compare(sf.ellint_P(2*M_PI, 0.99, -0.1),  14.4671264865298658713220, "ellint_P(2*M_PI, 0.99, -0.1)", TEST_TOL0)
compare(sf.ellint_P(2*M_PI, 0.50, -0.1),  7.12121397861819250516672, "ellint_P(2*M_PI, 0.50, -0.1)", TEST_TOL0)
compare(sf.ellint_P(2*M_PI, 0.01, -0.1),  6.62322879027593413083689, "ellint_P(2*M_PI, 0.01, -0.1)", TEST_TOL0)
compare(sf.ellint_P(7*M_PI/3.0, 0.99, -0.1),  15.8206005477190876078631, "ellint_P(7*M_PI/3.0, 0.99, -0.1)", TEST_TOL0)
compare(sf.ellint_P(7*M_PI/3.0, 0.50, -0.1),  8.24526889492372867057141, "ellint_P(7*M_PI/3.0, 0.50, -0.1)", TEST_TOL0)
compare(sf.ellint_P(7*M_PI/3.0, 0.01, -0.1),  7.70273208013189564674630, "ellint_P(7*M_PI/3.0, 0.01, -0.1)", TEST_TOL0)
compare(sf.ellint_P(-M_PI/2.0, 0.99, -0.1),  -3.61678162163246646783050, "ellint_P(-M_PI/2.0, 0.99, -0.1)", TEST_TOL0)
compare(sf.ellint_P(-M_PI/2.0, 0.50, -0.1),  -1.78030349465454812629168, "ellint_P(-M_PI/2.0, 0.50, -0.1)", TEST_TOL0)
compare(sf.ellint_P(-M_PI/2.0, 0.01, -0.1),  -1.65580719756898353270922, "ellint_P(-M_PI/2.0, 0.01, -0.1)", TEST_TOL0)
compare(sf.ellint_P(-2*M_PI/3.0, 0.99, -0.1),  -5.88008918207571119911983, "ellint_P(-2*M_PI/3.0, 0.99, -0.1)", TEST_TOL0)
compare(sf.ellint_P(-2*M_PI/3.0, 0.50, -0.1),  -2.43655207300356008717867, "ellint_P(-2*M_PI/3.0, 0.50, -0.1)", TEST_TOL0)
compare(sf.ellint_P(-2*M_PI/3.0, 0.01, -0.1),  -2.23211110528200554950903, "ellint_P(-2*M_PI/3.0, 0.01, -0.1)", TEST_TOL0)
compare(sf.ellint_P(-M_PI, 0.99, -0.1),  -7.23356324326493293566099, "ellint_P(-M_PI, 0.99, -0.1)", TEST_TOL0)
compare(sf.ellint_P(-M_PI, 0.50, -0.1),  -3.56060698930909625258336, "ellint_P(-M_PI, 0.50, -0.1)", TEST_TOL0)
compare(sf.ellint_P(-M_PI, 0.01, -0.1),  -3.31161439513796706541844, "ellint_P(-M_PI, 0.01, -0.1)", TEST_TOL0)
compare(sf.ellint_P(-4*M_PI/3, 0.99, -0.1),  -8.58703730445415467220216, "ellint_P(-4*M_PI/3, 0.99, -0.1)", TEST_TOL0)
compare(sf.ellint_P(-4*M_PI/3, 0.50, -0.1),  -4.68466190561463241798805, "ellint_P(-4*M_PI/3, 0.50, -0.1)", TEST_TOL0)
compare(sf.ellint_P(-4*M_PI/3, 0.01, -0.1),  -4.39111768499392858132786, "ellint_P(-4*M_PI/3, 0.01, -0.1)", TEST_TOL0)
compare(sf.ellint_P(-3*M_PI/2.0, 0.99, -0.1),  -10.8503448648973994034915, "ellint_P(-3*M_PI/2.0, 0.99, -0.1)", TEST_TOL0)
compare(sf.ellint_P(-3*M_PI/2.0, 0.50, -0.1),  -5.34091048396364437887504, "ellint_P(-3*M_PI/2.0, 0.50, -0.1)", TEST_TOL0)
compare(sf.ellint_P(-3*M_PI/2.0, 0.01, -0.1),  -4.96742159270695059812767, "ellint_P(-3*M_PI/2.0, 0.01, -0.1)", TEST_TOL0)
compare(sf.ellint_P(-5*M_PI/3, 0.99, -0.1),  -13.1136524253406441347808, "ellint_P(-5*M_PI/3, 0.99, -0.1)", TEST_TOL0)
compare(sf.ellint_P(-5*M_PI/3, 0.50, -0.1),  -5.99715906231265633976204, "ellint_P(-5*M_PI/3, 0.50, -0.1)", TEST_TOL0)
compare(sf.ellint_P(-5*M_PI/3, 0.01, -0.1),  -5.54372550041997261492747, "ellint_P(-5*M_PI/3, 0.01, -0.1)", TEST_TOL0)
compare(sf.ellint_P(-2*M_PI, 0.99, -0.1),  -14.4671264865298658713220, "ellint_P(-2*M_PI, 0.99, -0.1)", TEST_TOL0)
compare(sf.ellint_P(-2*M_PI, 0.50, -0.1),  -7.12121397861819250516672, "ellint_P(-2*M_PI, 0.50, -0.1)", TEST_TOL0)
compare(sf.ellint_P(-2*M_PI, 0.01, -0.1),  -6.62322879027593413083689, "ellint_P(-2*M_PI, 0.01, -0.1)", TEST_TOL0)
compare(sf.ellint_P(-7*M_PI/3.0, 0.99, -0.1),  -15.8206005477190876078631, "ellint_P(-7*M_PI/3.0, 0.99, -0.1)", TEST_TOL0)
compare(sf.ellint_P(-7*M_PI/3.0, 0.50, -0.1),  -8.24526889492372867057141, "ellint_P(-7*M_PI/3.0, 0.50, -0.1)", TEST_TOL0)
compare(sf.ellint_P(-7*M_PI/3.0, 0.01, -0.1),  -7.70273208013189564674630, "ellint_P(-7*M_PI/3.0, 0.01, -0.1)", TEST_TOL0)
compare(sf.ellint_D(M_PI/2.0, 0.99, 0),  2.375395076351788975665323192, "ellint_D(M_PI/2.0, 0.99, 0)", TEST_TOL0)
compare(sf.ellint_D(M_PI/2.0, 0.50, 0),  0.8731525818926755496456335628, "ellint_D(M_PI/2.0, 0.50, 0)", TEST_TOL0)
compare(sf.ellint_D(M_PI/2.0, 0.01, 0),  0.7854276176694868932799393751, "ellint_D(M_PI/2.0, 0.01, 0)", TEST_TOL0)
compare(sf.ellint_D(2*M_PI/3.0, 0.99, 0),  4.305885125424644860264320635, "ellint_D(2*M_PI/3.0, 0.99, 0)", TEST_TOL0)
compare(sf.ellint_D(2*M_PI/3.0, 0.50, 0),  1.418324704155697579394036402, "ellint_D(2*M_PI/3.0, 0.50, 0)", TEST_TOL0)
compare(sf.ellint_D(2*M_PI/3.0, 0.01, 0),  1.263755353901126149206022061, "ellint_D(2*M_PI/3.0, 0.01, 0)", TEST_TOL0)
compare(sf.ellint_D(M_PI, 0.99, 0) ,  4.750790152703577951330646444, "ellint_D(M_PI, 0.99, 0)", TEST_TOL0)
compare(sf.ellint_D(M_PI, 0.50, 0) ,  1.746305163785351099291267125, "ellint_D(M_PI, 0.50, 0)", TEST_TOL0)
compare(sf.ellint_D(M_PI, 0.01, 0) ,  1.570855235338973786559878750, "ellint_D(M_PI, 0.01, 0)", TEST_TOL0)
compare(sf.ellint_D(4*M_PI/3, 0.99, 0),  5.195695179982511042396972113, "ellint_D(4*M_PI/3, 0.99, 0)", TEST_TOL0)
compare(sf.ellint_D(4*M_PI/3, 0.50, 0),  2.074285623415004619188497818, "ellint_D(4*M_PI/3, 0.50, 0)", TEST_TOL0)
compare(sf.ellint_D(4*M_PI/3, 0.01, 0),  1.877955116776821423913735408, "ellint_D(4*M_PI/3, 0.01, 0)", TEST_TOL0)
compare(sf.ellint_D(3*M_PI/2.0, 0.99, 0),  7.126185229055366926995969476, "ellint_D(3*M_PI/2.0, 0.99, 0)", TEST_TOL0)
compare(sf.ellint_D(3*M_PI/2.0, 0.50, 0),  2.619457745678026648936900687, "ellint_D(3*M_PI/2.0, 0.50, 0)", TEST_TOL0)
compare(sf.ellint_D(3*M_PI/2.0, 0.01, 0),  2.356282853008460679839818125, "ellint_D(3*M_PI/2.0, 0.01, 0)", TEST_TOL0)
compare(sf.ellint_D(5*M_PI/3, 0.99, 0),  9.056675278128222811594967044, "ellint_D(5*M_PI/3, 0.99, 0)", TEST_TOL0)
compare(sf.ellint_D(5*M_PI/3, 0.50, 0),  3.164629867941048678685303509, "ellint_D(5*M_PI/3, 0.50, 0)", TEST_TOL0)
compare(sf.ellint_D(5*M_PI/3, 0.01, 0),  2.834610589240099935765900794, "ellint_D(5*M_PI/3, 0.01, 0)", TEST_TOL0)
compare(sf.ellint_D(2*M_PI, 0.99, 0),  9.501580305407155902661292832, "ellint_D(2*M_PI, 0.99, 0)", TEST_TOL0)
compare(sf.ellint_D(2*M_PI, 0.50, 0),  3.492610327570702198582534249, "ellint_D(2*M_PI, 0.50, 0)", TEST_TOL0)
compare(sf.ellint_D(2*M_PI, 0.01, 0),  3.141710470677947573119757500, "ellint_D(2*M_PI, 0.01, 0)", TEST_TOL0)
compare(sf.ellint_D(7*M_PI/3.0, 0.99, 0),  9.946485332686088993727618315, "ellint_D(7*M_PI/3.0, 0.99, 0)", TEST_TOL0)
compare(sf.ellint_D(7*M_PI/3.0, 0.50, 0),  3.820590787200355718479764901, "ellint_D(7*M_PI/3.0, 0.50, 0)", TEST_TOL0)
compare(sf.ellint_D(7*M_PI/3.0, 0.01, 0),  3.448810352115795210473614120, "ellint_D(7*M_PI/3.0, 0.01, 0)", TEST_TOL0)
compare(sf.ellint_D(-M_PI/2.0, 0.99, 0),  -2.375395076351788975665323192, "ellint_D(-M_PI/2.0, 0.99, 0)", TEST_TOL0)
compare(sf.ellint_D(-M_PI/2.0, 0.50, 0),  -0.8731525818926755496456335628, "ellint_D(-M_PI/2.0, 0.50, 0)", TEST_TOL0)
compare(sf.ellint_D(-M_PI/2.0, 0.01, 0),  -0.7854276176694868932799393751, "ellint_D(-M_PI/2.0, 0.01, 0)", TEST_TOL0)
compare(sf.ellint_D(-2*M_PI/3.0, 0.99, 0),  -4.305885125424644860264320635, "ellint_D(-2*M_PI/3.0, 0.99, 0)", TEST_TOL0)
compare(sf.ellint_D(-2*M_PI/3.0, 0.50, 0),  -1.418324704155697579394036402, "ellint_D(-2*M_PI/3.0, 0.50, 0)", TEST_TOL0)
compare(sf.ellint_D(-2*M_PI/3.0, 0.01, 0),  -1.263755353901126149206022061, "ellint_D(-2*M_PI/3.0, 0.01, 0)", TEST_TOL0)
compare(sf.ellint_D(-M_PI, 0.99, 0),  -4.750790152703577951330646444, "ellint_D(-M_PI, 0.99, 0)", TEST_TOL0)
compare(sf.ellint_D(-M_PI, 0.50, 0),  -1.746305163785351099291267125, "ellint_D(-M_PI, 0.50, 0)", TEST_TOL0)
compare(sf.ellint_D(-M_PI, 0.01, 0),  -1.570855235338973786559878750, "ellint_D(-M_PI, 0.01, 0)", TEST_TOL0)
compare(sf.ellint_D(-4*M_PI/3, 0.99, 0),  -5.195695179982511042396972113, "ellint_D(-4*M_PI/3, 0.99, 0)", TEST_TOL0)
compare(sf.ellint_D(-4*M_PI/3, 0.50, 0),  -2.074285623415004619188497818, "ellint_D(-4*M_PI/3, 0.50, 0)", TEST_TOL0)
compare(sf.ellint_D(-4*M_PI/3, 0.01, 0),  -1.877955116776821423913735408, "ellint_D(-4*M_PI/3, 0.01, 0)", TEST_TOL0)
compare(sf.ellint_D(-3*M_PI/2.0, 0.99, 0),  -7.126185229055366926995969476, "ellint_D(-3*M_PI/2.0, 0.99, 0)", TEST_TOL0)
compare(sf.ellint_D(-3*M_PI/2.0, 0.50, 0),  -2.619457745678026648936900687, "ellint_D(-3*M_PI/2.0, 0.50, 0)", TEST_TOL0)
compare(sf.ellint_D(-3*M_PI/2.0, 0.01, 0),  -2.356282853008460679839818125, "ellint_D(-3*M_PI/2.0, 0.01, 0)", TEST_TOL0)
compare(sf.ellint_D(-5*M_PI/3, 0.99, 0),  -9.056675278128222811594967044, "ellint_D(-5*M_PI/3, 0.99, 0)", TEST_TOL0)
compare(sf.ellint_D(-5*M_PI/3, 0.50, 0),  -3.164629867941048678685303509, "ellint_D(-5*M_PI/3, 0.50, 0)", TEST_TOL0)
compare(sf.ellint_D(-5*M_PI/3, 0.01, 0),  -2.834610589240099935765900794, "ellint_D(-5*M_PI/3, 0.01, 0)", TEST_TOL0)
compare(sf.ellint_D(-2*M_PI, 0.99, 0),  -9.501580305407155902661292832, "ellint_D(-2*M_PI, 0.99, 0)", TEST_TOL0)
compare(sf.ellint_D(-2*M_PI, 0.50, 0),  -3.492610327570702198582534249, "ellint_D(-2*M_PI, 0.50, 0)", TEST_TOL0)
compare(sf.ellint_D(-2*M_PI, 0.01, 0),  -3.141710470677947573119757500, "ellint_D(-2*M_PI, 0.01, 0)", TEST_TOL0)
compare(sf.ellint_D(-7*M_PI/3.0, 0.99, 0),  -9.946485332686088993727618315, "ellint_D(-7*M_PI/3.0, 0.99, 0)", TEST_TOL0)
compare(sf.ellint_D(-7*M_PI/3.0, 0.50, 0),  -3.820590787200355718479764901, "ellint_D(-7*M_PI/3.0, 0.50, 0)", TEST_TOL0)
compare(sf.ellint_D(-7*M_PI/3.0, 0.01, 0),  -3.448810352115795210473614120, "ellint_D(-7*M_PI/3.0, 0.01, 0)", TEST_TOL0)
compare(sf.erfc(-10.0)                   ,                        2.0, "erfc(-10.0)", TEST_TOL0)
compare(sf.erfc(-5.0000002)              ,      1.9999999999984625433, "erfc(-5.0000002)", TEST_TOL0)
compare(sf.erfc(-5.0)                    ,      1.9999999999984625402, "erfc(-5.0)", TEST_TOL0)
compare(sf.erfc(-1.0)                    ,      1.8427007929497148693, "erfc(-1.0)", TEST_TOL0)
compare(sf.erfc(-0.5)                    ,      1.5204998778130465377, "erfc(-0.5)", TEST_TOL0)
compare(sf.erfc(1.0)                     ,     0.15729920705028513066, "erfc(1.0)", TEST_TOL0)
compare(sf.erfc(3.0)                     ,  0.000022090496998585441373, "erfc(3.0)", TEST_TOL1)
compare(sf.erfc(7.0)                     ,   4.183825607779414399e-23, "erfc(7.0)", TEST_TOL2)
compare(sf.erfc(10.0)                    ,  2.0884875837625447570e-45, "erfc(10.0)", TEST_TOL2)
compare(sf.log_erfc(-1.0)                ,  log(1.842700792949714869), "log_erfc(-1.0)", TEST_TOL0)
compare(sf.log_erfc(-0.1)                ,    0.106576400586522485015, "log_erfc(-0.1)", TEST_TOL0)
compare(sf.log_erfc(-1e-10)              ,  1.1283791670318505967e-10, "log_erfc(-1e-10)", TEST_TOL0)
compare(sf.log_erfc(0.0)                 ,                   log(1.0), "log_erfc(0.0)", TEST_TOL0)
compare(sf.log_erfc(1e-10)               ,  -1.128379167159174551e-10, "log_erfc(1e-10)", TEST_TOL0)
compare(sf.log_erfc(0.001)               ,  -0.0011290158896213548027, "log_erfc(0.001)", TEST_TOL0)
compare(sf.log_erfc(0.1)                 ,   -0.119304973737395598329, "log_erfc(0.1)", TEST_TOL0)
compare(sf.log_erfc(1.0)                 ,  log(0.15729920705028513066), "log_erfc(1.0)", TEST_TOL0)
compare(sf.log_erfc(10.0)                ,  log(2.0884875837625447570e-45), "log_erfc(10.0)", TEST_TOL0)
compare(sf.erf(-10.0)                    ,     -1.0000000000000000000, "erf(-10.0)", TEST_TOL0)
compare(sf.erf(0.5)                      ,      0.5204998778130465377, "erf(0.5)", TEST_TOL0)
compare(sf.erf(1.0)                      ,      0.8427007929497148693, "erf(1.0)", TEST_TOL0)
compare(sf.erf(10.0)                     ,      1.0000000000000000000, "erf(10.0)", TEST_TOL0)
compare(sf.erf_Z(1.0)                    ,     0.24197072451914334980, "erf_Z(1.0)", TEST_TOL0)
compare(sf.erf_Q(10.0)                   ,   7.619853024160526066e-24, "erf_Q(10.0)", TEST_TOL2)
compare(sf.hazard(-20.0)                 ,  5.5209483621597631896e-88, "hazard(-20.0)", TEST_TOL2)
compare(sf.hazard(-10.0)                 ,  7.6945986267064193463e-23, "hazard(-10.0)", TEST_TOL2)
compare(sf.hazard(-1.0)                  ,     0.28759997093917836123, "hazard(-1.0)", TEST_TOL0)
compare(sf.hazard( 0.0)                  ,     0.79788456080286535588, "hazard( 0.0)", TEST_TOL0)
compare(sf.hazard( 1.0)                  ,      1.5251352761609812091, "hazard( 1.0)", TEST_TOL0)
compare(sf.hazard(10.0)                  ,      10.098093233962511963, "hazard(10.0)", TEST_TOL2)
compare(sf.hazard(20.0)                  ,      20.049753068527850542, "hazard(20.0)", TEST_TOL2)
compare(sf.hazard(30.0)                  ,      30.033259667433677037, "hazard(30.0)", TEST_TOL2)
compare(sf.hazard(50.0)                  ,      50.019984031905639809, "hazard(50.0)", TEST_TOL0)
compare(sf.hazard(80.0)                  ,      80.012496096798234468, "hazard(80.0)", TEST_TOL0)
compare(sf.hazard(150.0)                 ,      150.00666607420571802, "hazard(150.0)", TEST_TOL0)
compare(sf.hazard(300.0)                 ,      300.00333325926337415, "hazard(300.0)", TEST_TOL0)
compare(sf.hazard(900.0)                 ,      900.00111110836764382, "hazard(900.0)", TEST_TOL0)
compare(sf.hazard(1001.0)                ,      1001.0009989990049990, "hazard(1001.0)", TEST_TOL0)
compare(sf.hazard(2000.0)                ,      2000.0004999997500003, "hazard(2000.0)", TEST_TOL0)
compare(sf.exp(-10.0)                    ,                 exp(-10.0), "exp(-10.0)", TEST_TOL0)
compare(sf.exp( 10.0)                    ,                 exp( 10.0), "exp( 10.0)", TEST_TOL0)
compare(sf.exp_err(-10.0, TEST_TOL1)     ,                 exp(-10.0), "exp_err(-10.0, TEST_TOL1)", TEST_TOL1)
compare(sf.exp_err( 10.0, TEST_TOL1)     ,                 exp( 10.0), "exp_err( 10.0, TEST_TOL1)", TEST_TOL1)
x = 0.8*GSL_LOG_DBL_MAX
compare(sf.exp_mult(-10.0,  1.0e-06)     ,         1.0e-06*exp(-10.0), "exp_mult(-10.0,  1.0e-06)", TEST_TOL0)
compare(sf.exp_mult(-10.0,  2.0)         ,             2.0*exp(-10.0), "exp_mult(-10.0,  2.0)", TEST_TOL0)
compare(sf.exp_mult(-10.0, -2.0)         ,            -2.0*exp(-10.0), "exp_mult(-10.0, -2.0)", TEST_TOL0)
compare(sf.exp_mult( 10.0,  1.0e-06)     ,         1.0e-06*exp( 10.0), "exp_mult( 10.0,  1.0e-06)", TEST_TOL0)
compare(sf.exp_mult( 10.0, -2.0)         ,            -2.0*exp( 10.0), "exp_mult( 10.0, -2.0)", TEST_TOL0)
compare(sf.exp_mult(x, 1.00001)          ,             1.00001*exp(x), "exp_mult(x, 1.00001)", TEST_TOL3)
compare(sf.exp_mult(x, 1.000001)         ,            1.000001*exp(x), "exp_mult(x, 1.000001)", TEST_TOL3)
compare(sf.exp_mult(x, 1.000000001)      ,         1.000000001*exp(x), "exp_mult(x, 1.000000001)", TEST_TOL3)
compare(sf.exp_mult(x, 100.0)            ,               100.0*exp(x), "exp_mult(x, 100.0)", TEST_TOL3)
compare(sf.exp_mult(x, 1.0e+20)          ,             1.0e+20*exp(x), "exp_mult(x, 1.0e+20)", TEST_TOL3)
compare(sf.exp_mult_err(-10.0, TEST_SQRT_TOL0, 2.0, TEST_SQRT_TOL0),             2.0*exp(-10.0), "exp_mult_err(-10.0, TEST_SQRT_TOL0, 2.0, TEST_SQRT_TOL0)", TEST_SQRT_TOL0)
compare(sf.expm1(-10.0)                  ,             exp(-10.0)-1.0, "expm1(-10.0)", TEST_TOL0)
compare(sf.expm1(-0.001)                 ,    -0.00099950016662500845, "expm1(-0.001)", TEST_TOL0)
compare(sf.expm1(-1.0e-8)                ,         -1.0e-08 + 0.5e-16, "expm1(-1.0e-8)", TEST_TOL0)
compare(sf.expm1( 1.0e-8)                ,          1.0e-08 + 0.5e-16, "expm1( 1.0e-8)", TEST_TOL0)
compare(sf.expm1( 0.001)                 ,      0.0010005001667083417, "expm1( 0.001)", TEST_TOL0)
compare(sf.expm1( 10.0)                  ,              exp(10.0)-1.0, "expm1( 10.0)", TEST_TOL0)
compare(sf.exprel(-10.0)                 ,      0.0999954600070237515, "exprel(-10.0)", TEST_TOL0)
compare(sf.exprel(-0.001)                ,         0.9995001666250084, "exprel(-0.001)", TEST_TOL0)
compare(sf.exprel(-1.0e-8)               ,              1.0 - 0.5e-08, "exprel(-1.0e-8)", TEST_TOL0)
compare(sf.exprel( 1.0e-8)               ,              1.0 + 0.5e-08, "exprel( 1.0e-8)", TEST_TOL0)
compare(sf.exprel( 0.001)                ,         1.0005001667083417, "exprel( 0.001)", TEST_TOL0)
compare(sf.exprel( 10.0)                 ,      2202.5465794806716517, "exprel( 10.0)", TEST_TOL0)
compare(sf.exprel_2(-10.0)               ,     0.18000090799859524970, "exprel_2(-10.0)", TEST_TOL0)
compare(sf.exprel_2(-0.001)              ,      0.9996667499833361107, "exprel_2(-0.001)", TEST_TOL0)
compare(sf.exprel_2(-1.0e-8)             ,      0.9999999966666666750, "exprel_2(-1.0e-8)", TEST_TOL0)
compare(sf.exprel_2( 1.0e-8)             ,      1.0000000033333333417, "exprel_2( 1.0e-8)", TEST_TOL0)
compare(sf.exprel_2( 0.001)              ,      1.0003334166833361115, "exprel_2( 0.001)", TEST_TOL0)
compare(sf.exprel_2( 10.0)               ,       440.3093158961343303, "exprel_2( 10.0)", TEST_TOL0)
compare(sf.exprel_n(3, -1000.0)          ,     0.00299400600000000000, "exprel_n(3, -1000.0)", TEST_TOL0)
compare(sf.exprel_n(3, -100.0)           ,     0.02940600000000000000, "exprel_n(3, -100.0)", TEST_TOL0)
compare(sf.exprel_n(3, -10.0)            ,     0.24599972760042142509, "exprel_n(3, -10.0)", TEST_TOL0)
compare(sf.exprel_n(3, -3.0)             ,      0.5444917625849191238, "exprel_n(3, -3.0)", TEST_TOL0)
compare(sf.exprel_n(3, -0.001)           ,      0.9997500499916678570, "exprel_n(3, -0.001)", TEST_TOL0)
compare(sf.exprel_n(3, -1.0e-8)          ,      0.9999999975000000050, "exprel_n(3, -1.0e-8)", TEST_TOL0)
compare(sf.exprel_n(3,  1.0e-8)          ,      1.0000000025000000050, "exprel_n(3,  1.0e-8)", TEST_TOL0)
compare(sf.exprel_n(3,  0.001)           ,      1.0002500500083345240, "exprel_n(3,  0.001)", TEST_TOL0)
compare(sf.exprel_n(3,  3.0)             ,      2.5745637607083706091, "exprel_n(3,  3.0)", TEST_TOL0)
compare(sf.exprel_n(3,  3.1)             ,      2.6772417068460206247, "exprel_n(3,  3.1)", TEST_TOL0)
compare(sf.exprel_n(3,  10.0)            ,      131.79279476884029910, "exprel_n(3,  10.0)", TEST_TOL1)
compare(sf.exprel_n(3,  100.0)           ,  1.6128702850896812690e+38, "exprel_n(3,  100.0)", TEST_TOL2)
compare(sf.exprel_n(50, -1000.0)         ,     0.04766231609253975959, "exprel_n(50, -1000.0)", TEST_TOL0)
compare(sf.exprel_n(50, -100.0)          ,      0.3348247572345889317, "exprel_n(50, -100.0)", TEST_TOL0)
compare(sf.exprel_n(50, -10.0)           ,      0.8356287051853286482, "exprel_n(50, -10.0)", TEST_TOL0)
compare(sf.exprel_n(50, -3.0)            ,      0.9443881609152163615, "exprel_n(50, -3.0)", TEST_TOL0)
compare(sf.exprel_n(50, -1.0)            ,       0.980762245565660617, "exprel_n(50, -1.0)", TEST_TOL0)
compare(sf.exprel_n(50, -1.0e-8)         ,           1.0 -1.0e-8/51.0, "exprel_n(50, -1.0e-8)", TEST_TOL0)
compare(sf.exprel_n(50,  1.0e-8)         ,           1.0 +1.0e-8/51.0, "exprel_n(50,  1.0e-8)", TEST_TOL0)
compare(sf.exprel_n(50,  1.0)            ,        1.01999216583666790, "exprel_n(50,  1.0)", TEST_TOL0)
compare(sf.exprel_n(50,  3.0)            ,      1.0624205757460368307, "exprel_n(50,  3.0)", TEST_TOL0)
compare(sf.exprel_n(50,  48.0)           ,       7.499573876877194416, "exprel_n(50,  48.0)", TEST_TOL0)
compare(sf.exprel_n(50,  50.1)           ,       9.311803306230992272, "exprel_n(50,  50.1)", TEST_TOL4)
compare(sf.exprel_n(50,  100.0)          ,   8.175664432485807634e+07, "exprel_n(50,  100.0)", TEST_TOL4)
compare(sf.exprel_n(50,  500.0)          ,  4.806352370663185330e+146, "exprel_n(50,  500.0)", TEST_TOL3)
compare(sf.exprel_n(500, -1000.0)        ,      0.3334815803127619256, "exprel_n(500, -1000.0)", TEST_TOL0)
compare(sf.exprel_n(500, -100.0)         ,      0.8335646217536183909, "exprel_n(500, -100.0)", TEST_TOL0)
compare(sf.exprel_n(500, -10.0)          ,      0.9804297803131823066, "exprel_n(500, -10.0)", TEST_TOL0)
compare(sf.exprel_n(500, -3.0)           ,      0.9940475488850672997, "exprel_n(500, -3.0)", TEST_TOL0)
compare(sf.exprel_n(500, -1.0)           ,      0.9980079602383488808, "exprel_n(500, -1.0)", TEST_TOL0)
compare(sf.exprel_n(500, -1.0e-8)        ,          1.0 -1.0e-8/501.0, "exprel_n(500, -1.0e-8)", TEST_TOL0)
compare(sf.exprel_n(500,  1.0e-8)        ,          1.0 +1.0e-8/501.0, "exprel_n(500,  1.0e-8)", TEST_TOL0)
compare(sf.exprel_n(500,  1.0)           ,      1.0019999920160634252, "exprel_n(500,  1.0)", TEST_TOL0)
compare(sf.exprel_n(500,  3.0)           ,      1.0060240236632444934, "exprel_n(500,  3.0)", TEST_TOL0)
compare(sf.exprel_n(500,  48.0)          ,      1.1059355517981272174, "exprel_n(500,  48.0)", TEST_TOL0)
compare(sf.exprel_n(500,  100.0)         ,      1.2492221464878287204, "exprel_n(500,  100.0)", TEST_TOL1)
compare(sf.exprel_n(500,  500.0)         ,      28.363019877927630858, "exprel_n(500,  500.0)", TEST_TOL2)
compare(sf.exprel_n(500,  1000.0)        ,  2.4037563160335300322e+68, "exprel_n(500,  1000.0)", TEST_TOL4)
compare(sf.exprel_n(500,  1600.0)        ,  7.899293535320607403e+226, "exprel_n(500,  1600.0)", TEST_TOL4)
compare(sf.exprel_n(1263131.0, 1261282.3637),  545.0113107238425900305428360, "exprel_n(1263131.0, 1261282.3637)", TEST_TOL4)
compare(sf.expint_E(1,-1.0)              ,     -1.8951178163559367555, "expint_E(1,-1.0)", TEST_TOL0)
compare(sf.expint_E(1,1.0e-10)           ,      22.448635265138923980, "expint_E(1,1.0e-10)", TEST_TOL0)
compare(sf.expint_E(1,1.0e-05)           ,      10.935719800043695615, "expint_E(1,1.0e-05)", TEST_TOL0)
compare(sf.expint_E(1,0.1)               ,     1.82292395841939066610, "expint_E(1,0.1)", TEST_TOL0)
compare(sf.expint_E(1,1.0)               ,     0.21938393439552027368, "expint_E(1,1.0)", TEST_TOL0)
compare(sf.expint_E(1,10.0)              ,   4.156968929685324277e-06, "expint_E(1,10.0)", TEST_TOL1)
compare(sf.expint_E(1,50.0)              ,   3.783264029550459019e-24, "expint_E(1,50.0)", TEST_TOL2)
compare(sf.expint_E(1,300.0)             ,  1.710384276804510115e-133, "expint_E(1,300.0)", TEST_TOL2)
compare(sf.expint_E(2,-1.0)              ,      0.8231640121031084799, "expint_E(2,-1.0)", TEST_TOL1)
compare(sf.expint_E(2,0.0)               ,                        1.0, "expint_E(2,0.0)", TEST_TOL0)
compare(sf.expint_E(2,1.0/4294967296.0)  ,      0.9999999947372139168, "expint_E(2,1.0/4294967296.0)", TEST_TOL0)
compare(sf.expint_E(2,1.0/65536.0)       ,      0.9998243233207178845, "expint_E(2,1.0/65536.0)", TEST_TOL0)
compare(sf.expint_E(2,0.1)               ,      0.7225450221940205066, "expint_E(2,0.1)", TEST_TOL0)
compare(sf.expint_E(2,1.0)               ,     0.14849550677592204792, "expint_E(2,1.0)", TEST_TOL0)
compare(sf.expint_E(2,10.0)              ,   3.830240465631608762e-06, "expint_E(2,10.0)", TEST_TOL1)
compare(sf.expint_E(2,50.0)              ,   3.711783318868827367e-24, "expint_E(2,50.0)", TEST_TOL2)
compare(sf.expint_E(2,300.0)             ,  1.7047391998483433998e-133, "expint_E(2,300.0)", TEST_TOL2)
compare(sf.expint_E(3,0.0)               ,                        0.5, "expint_E(3,0.0)", TEST_TOL0)
compare(sf.expint_E(3,1.0/4294967296.0)  ,    0.499999999767169356972, "expint_E(3,1.0/4294967296.0)", TEST_TOL1)
compare(sf.expint_E(3,1.0/65536.0)       ,      0.4999847426094515610, "expint_E(3,1.0/65536.0)", TEST_TOL0)
compare(sf.expint_E(3,0.1)               ,   0.4162914579082787612543, "expint_E(3,0.1)", TEST_TOL0)
compare(sf.expint_E(3,1.0)               ,  0.10969196719776013683858, "expint_E(3,1.0)", TEST_TOL1)
compare(sf.expint_E(3,10.0)              ,  0.000003548762553084381959981, "expint_E(3,10.0)", TEST_TOL1)
compare(sf.expint_E(3,50.0)              ,  3.6429094264752049812e-24, "expint_E(3,50.0)", TEST_TOL2)
compare(sf.expint_E(3,300.0)             ,  1.699131143349179084e-133, "expint_E(3,300.0)", TEST_TOL2)
compare(sf.expint_E(10,0.0)              ,       0.111111111111111111, "expint_E(10,0.0)", TEST_TOL0)
compare(sf.expint_E(10,1.0/4294967296.0) ,    0.111111111082007280658, "expint_E(10,1.0/4294967296.0)", TEST_TOL2)
compare(sf.expint_E(10,1.0/65536.0)      ,  0.11110920377910896018606, "expint_E(10,1.0/65536.0)", TEST_TOL1)
compare(sf.expint_E(10,0.1)              ,  0.099298432000896813567905, "expint_E(10,0.1)", TEST_TOL1)
compare(sf.expint_E(10,1.0)              ,  0.036393994031416401634164534, "expint_E(10,1.0)", TEST_TOL1)
compare(sf.expint_E(10,10.0)             ,  0.00000232530265702821081778968, "expint_E(10,10.0)", TEST_TOL1)
compare(sf.expint_E(10,50.0)             ,  3.223296586749110919572e-24, "expint_E(10,50.0)", TEST_TOL2)
compare(sf.expint_E(10,300.0)            ,  1.6608815083360041367294736e-133, "expint_E(10,300.0)", TEST_TOL2)
compare(sf.expint_Ei(-1.0)               ,    -0.21938393439552027368, "expint_Ei(-1.0)", TEST_TOL0)
compare(sf.expint_Ei(1.0/4294967296.0)   ,     -21.603494112783886397, "expint_Ei(1.0/4294967296.0)", TEST_TOL0)
compare(sf.expint_Ei(1.0)                ,      1.8951178163559367555, "expint_Ei(1.0)", TEST_TOL0)
compare(sf.Shi(-1.0)                     ,     -1.0572508753757285146, "Shi(-1.0)", TEST_TOL0)
compare(sf.Shi(1.0/4294967296.0)         ,  2.3283064365386962891e-10, "Shi(1.0/4294967296.0)", TEST_TOL0)
compare(sf.Shi(1.0/65536.0)              ,  0.00001525878906269737298, "Shi(1.0/65536.0)", TEST_TOL0)
compare(sf.Shi(0.1)                      ,      0.1000555722250569955, "Shi(0.1)", TEST_TOL0)
compare(sf.Shi(1.0)                      ,      1.0572508753757285146, "Shi(1.0)", TEST_TOL0)
compare(sf.Shi(10.0)                     ,      1246.1144901994233444, "Shi(10.0)", TEST_TOL1)
compare(sf.Shi(50.0)                     ,   5.292818448565845482e+19, "Shi(50.0)", TEST_TOL2)
compare(sf.Shi(300.0)                    ,  3.248241254044332895e+127, "Shi(300.0)", TEST_TOL2)
compare(sf.Chi(-1.0)                     ,      0.8378669409802082409, "Chi(-1.0)", TEST_TOL0)
compare(sf.Chi(1.0/4294967296.0)         ,     -21.603494113016717041, "Chi(1.0/4294967296.0)", TEST_TOL0)
compare(sf.Chi(1.0/65536.0)              ,     -10.513139223999384429, "Chi(1.0/65536.0)", TEST_TOL0)
compare(sf.Chi(1.0/8.0)                  ,     -1.4983170827635760646, "Chi(1.0/8.0)", TEST_TOL0)
compare(sf.Chi(1.0)                      ,      0.8378669409802082409, "Chi(1.0)", TEST_TOL0)
compare(sf.Chi(10.0)                     ,      1246.1144860424544147, "Chi(10.0)", TEST_TOL1)
compare(sf.Chi(50.0)                     ,   5.292818448565845482e+19, "Chi(50.0)", TEST_TOL2)
compare(sf.Chi(300.0)                    ,  3.248241254044332895e+127, "Chi(300.0)", TEST_TOL2)
compare(sf.expint3(1.0e-10)              ,                    1.0e-10, "expint3(1.0e-10)", TEST_TOL0)
compare(sf.expint3(1.0e-05)              ,     9.9999999999999975e-06, "expint3(1.0e-05)", TEST_TOL0)
compare(sf.expint3(0.1)                  ,  0.09997500714119079665122, "expint3(0.1)", TEST_TOL0)
compare(sf.expint3(0.5)                  ,  0.48491714311363971332427, "expint3(0.5)", TEST_TOL0)
compare(sf.expint3(1.0)                  ,  0.80751118213967145285833, "expint3(1.0)", TEST_TOL0)
compare(sf.expint3(2.0)                  ,  0.89295351429387631138208, "expint3(2.0)", TEST_TOL0)
compare(sf.expint3(5.0)                  ,  0.89297951156924921121856, "expint3(5.0)", TEST_TOL0)
compare(sf.expint3(10.0)                 ,  0.89297951156924921121856, "expint3(10.0)", TEST_TOL0)
compare(sf.expint3(100.0)                ,  0.89297951156924921121856, "expint3(100.0)", TEST_TOL0)
compare(sf.Si(-1.0)                      ,     -0.9460830703671830149, "Si(-1.0)", TEST_TOL0)
compare(sf.Si(1.0e-10)                   ,                    1.0e-10, "Si(1.0e-10)", TEST_TOL0)
compare(sf.Si(1.0e-05)                   ,   9.999999999944444444e-06, "Si(1.0e-05)", TEST_TOL0)
compare(sf.Si(0.1)                       ,     0.09994446110827695016, "Si(0.1)", TEST_TOL0)
compare(sf.Si(1.0)                       ,      0.9460830703671830149, "Si(1.0)", TEST_TOL0)
compare(sf.Si(10.0)                      ,      1.6583475942188740493, "Si(10.0)", TEST_TOL0)
compare(sf.Si(50.0)                      ,      1.5516170724859358947, "Si(50.0)", TEST_TOL0)
compare(sf.Si(300.0)                     ,      1.5708810882137495193, "Si(300.0)", TEST_TOL0)
compare(sf.Si(1.0e+20)                   ,      1.5707963267948966192, "Si(1.0e+20)", TEST_TOL0)
compare(sf.Ci(1.0/4294967296.0)          ,     -21.603494113016717041, "Ci(1.0/4294967296.0)", TEST_TOL0)
compare(sf.Ci(1.0/65536.0)               ,     -10.513139224115799751, "Ci(1.0/65536.0)", TEST_TOL0)
compare(sf.Ci(1.0/8.0)                   ,     -1.5061295845296396649, "Ci(1.0/8.0)", TEST_TOL0)
compare(sf.Ci(1.0)                       ,      0.3374039229009681347, "Ci(1.0)", TEST_TOL0)
compare(sf.Ci(10.0)                      ,    -0.04545643300445537263, "Ci(10.0)", TEST_TOL0)
compare(sf.Ci(50.0)                      ,   -0.005628386324116305440, "Ci(50.0)", TEST_TOL0)
compare(sf.Ci(300.0)                     ,   -0.003332199918592111780, "Ci(300.0)", TEST_TOL0)
compare(sf.Ci(65536.0)                   ,  0.000010560248837656279453, "Ci(65536.0)", TEST_TOL0)
compare(sf.Ci(4294967296.0)              ,  -1.0756463261957757485e-10, "Ci(4294967296.0)", TEST_SQRT_TOL0)
compare(sf.Ci(1099511627776.0)           ,  -3.689865584710764214e-13, "Ci(1099511627776.0)", 1024.0*TEST_SQRT_TOL0)
compare(sf.atanint(1.0e-10)              ,                    1.0e-10, "atanint(1.0e-10)", TEST_TOL0)
compare(sf.atanint(1.0e-05)              ,  9.99999999988888888889e-06, "atanint(1.0e-05)", TEST_TOL0)
compare(sf.atanint(0.1)                  ,     0.09988928686033618404, "atanint(0.1)", TEST_TOL0)
compare(sf.atanint(1.0)                  ,     0.91596559417721901505, "atanint(1.0)", TEST_TOL0)
compare(sf.atanint(2.0)                  ,     1.57601540344632342236, "atanint(2.0)", TEST_TOL0)
compare(sf.atanint(10.0)                 ,     3.71678149306806859029, "atanint(10.0)", TEST_TOL0)
compare(sf.atanint(50.0)                 ,     6.16499047850274874222, "atanint(50.0)", TEST_TOL0)
compare(sf.atanint(300.0)                ,     8.96281388924518959990, "atanint(300.0)", TEST_TOL0)
compare(sf.atanint(1.0e+5)               ,      18.084471031038661920, "atanint(1.0e+5)", TEST_TOL0)
compare(sf.atanint(1.0e+9)               ,      32.552029856869591656, "atanint(1.0e+9)", TEST_TOL0)
compare(sf.fermi_dirac(3,  -2.0)         ,      0.1342199155038680215, "fermi_dirac(3,  -2.0)", TEST_TOL0)
compare(sf.fermi_dirac(3,   0.0)         ,      0.9470328294972459176, "fermi_dirac(3,   0.0)", TEST_TOL0)
compare(sf.fermi_dirac(3,   0.1)         ,      1.0414170610956165759, "fermi_dirac(3,   0.1)", TEST_TOL0)
compare(sf.fermi_dirac(3,   1.0)         ,      2.3982260822489407070, "fermi_dirac(3,   1.0)", TEST_TOL0)
compare(sf.fermi_dirac(3,   3.0)         ,      12.621635313399690724, "fermi_dirac(3,   3.0)", TEST_TOL1)
compare(sf.fermi_dirac(3, 100.0)         ,   4.174893231066566793e+06, "fermi_dirac(3, 100.0)", TEST_TOL1)
compare(sf.fermi_dirac(3, 500.0)         ,   2.604372285319088354e+09, "fermi_dirac(3, 500.0)", TEST_TOL1)
compare(sf.fermi_dirac(5,  -2.0)         ,     0.13505242246823676478, "fermi_dirac(5,  -2.0)", TEST_TOL0)
compare(sf.fermi_dirac(5,   0.0)         ,      0.9855510912974351041, "fermi_dirac(5,   0.0)", TEST_TOL0)
compare(sf.fermi_dirac(5,   0.1)         ,      1.0876519750101492782, "fermi_dirac(5,   0.1)", TEST_TOL0)
compare(sf.fermi_dirac(5,   1.0)         ,      2.6222337848692390539, "fermi_dirac(5,   1.0)", TEST_TOL0)
compare(sf.fermi_dirac(5,   3.0)         ,      17.008801618012113022, "fermi_dirac(5,   3.0)", TEST_TOL1)
compare(sf.fermi_dirac(5, 100.0)         ,  1.3957522531334869874e+09, "fermi_dirac(5, 100.0)", TEST_TOL1)
compare(sf.fermi_dirac(5, 500.0)         ,  2.1705672808114817955e+13, "fermi_dirac(5, 500.0)", TEST_TOL2)
compare(sf.fermi_dirac(7,  -2.0)         ,      0.1352641105671255851, "fermi_dirac(7,  -2.0)", TEST_TOL0)
compare(sf.fermi_dirac(7,   0.0)         ,      0.9962330018526478992, "fermi_dirac(7,   0.0)", TEST_TOL0)
compare(sf.fermi_dirac(7,   0.1)         ,      1.1005861815180315485, "fermi_dirac(7,   0.1)", TEST_TOL0)
compare(sf.fermi_dirac(7,   1.0)         ,      2.6918878172003129203, "fermi_dirac(7,   1.0)", TEST_TOL0)
compare(sf.fermi_dirac(7,   3.0)         ,      19.033338976999367642, "fermi_dirac(7,   3.0)", TEST_TOL2)
compare(sf.fermi_dirac(7,  10.0)         ,       5654.530932873610014, "fermi_dirac(7,  10.0)", TEST_TOL1)
compare(sf.fermi_dirac(7,  50.0)         ,   1.005005069985066278e+09, "fermi_dirac(7,  50.0)", TEST_TOL2)
compare(sf.fermi_dirac(7, 500.0)         ,   9.691690268341569514e+16, "fermi_dirac(7, 500.0)", TEST_TOL3)
compare(sf.fermi_dirac(9,  -2.0)         ,      0.1353174385330242691, "fermi_dirac(9,  -2.0)", TEST_TOL0)
compare(sf.fermi_dirac(9,   0.0)         ,      0.9990395075982715656, "fermi_dirac(9,   0.0)", TEST_TOL0)
compare(sf.fermi_dirac(9,   0.1)         ,      1.1039997234712941212, "fermi_dirac(9,   0.1)", TEST_TOL0)
compare(sf.fermi_dirac(9,   1.0)         ,      2.7113648898129249947, "fermi_dirac(9,   1.0)", TEST_TOL0)
compare(sf.fermi_dirac(9,   3.0)         ,      19.768544008138602223, "fermi_dirac(9,   3.0)", TEST_TOL2)
compare(sf.fermi_dirac(9,  10.0)         ,      10388.990167312912478, "fermi_dirac(9,  10.0)", TEST_TOL2)
compare(sf.fermi_dirac(9,  50.0)         ,    2.85466960802601649e+10, "fermi_dirac(9,  50.0)", TEST_TOL1)
compare(sf.fermi_dirac(9, 500.0)         ,    2.69273849842695876e+20, "fermi_dirac(9, 500.0)", 2*TEST_TOL1)
compare(sf.fermi_dirac(10,  -2.0)        ,     0.13532635396712288092, "fermi_dirac(10,  -2.0)", TEST_TOL0)
compare(sf.fermi_dirac(10,   0.0)        ,      0.9995171434980607541, "fermi_dirac(10,   0.0)", TEST_TOL0)
compare(sf.fermi_dirac(10,   0.1)        ,      1.1045818238852612296, "fermi_dirac(10,   0.1)", TEST_TOL0)
compare(sf.fermi_dirac(10,   1.0)        ,      2.7147765350346120647, "fermi_dirac(10,   1.0)", TEST_TOL0)
compare(sf.fermi_dirac(10,   3.0)        ,      19.917151938411675171, "fermi_dirac(10,   3.0)", TEST_TOL1)
compare(sf.fermi_dirac(10,  10.0)        ,      12790.918595516495955, "fermi_dirac(10,  10.0)", TEST_TOL2)
compare(sf.fermi_dirac(10,  50.0)        ,  1.3147703201869657654e+11, "fermi_dirac(10,  50.0)", TEST_TOL2)
compare(sf.fermi_dirac(10, 500.0)        ,  1.2241331244469204398e+22, "fermi_dirac(10, 500.0)", TEST_TOL2)
compare(sf.fermi_dirac(11,  -2.0)        ,      0.1353308162894847149, "fermi_dirac(11,  -2.0)", TEST_TOL0)
compare(sf.fermi_dirac(11,   0.0)        ,      0.9997576851438581909, "fermi_dirac(11,   0.0)", TEST_TOL0)
compare(sf.fermi_dirac(11,   0.1)        ,      1.1048751811565850418, "fermi_dirac(11,   0.1)", TEST_TOL0)
compare(sf.fermi_dirac(11,   1.0)        ,      2.7165128749007313436, "fermi_dirac(11,   1.0)", TEST_TOL0)
compare(sf.fermi_dirac(11,   3.0)        ,      19.997483022044603065, "fermi_dirac(11,   3.0)", TEST_TOL2)
compare(sf.fermi_dirac(11,  10.0)        ,      14987.996005901818036, "fermi_dirac(11,  10.0)", TEST_TOL2)
compare(sf.fermi_dirac(11,  50.0)        ,   5.558322924078990628e+11, "fermi_dirac(11,  50.0)", TEST_TOL2)
compare(sf.fermi_dirac(11, 500.0)        ,   5.101293089606198280e+23, "fermi_dirac(11, 500.0)", TEST_TOL2)
compare(sf.fermi_dirac(20,  -2.0)        ,     0.13533527450327238373, "fermi_dirac(20,  -2.0)", TEST_TOL0)
compare(sf.fermi_dirac(20,   0.0)        ,      0.9999995232582155428, "fermi_dirac(20,   0.0)", TEST_TOL0)
compare(sf.fermi_dirac(20,   0.1)        ,      1.1051703357941368203, "fermi_dirac(20,   0.1)", TEST_TOL0)
compare(sf.fermi_dirac(20,   1.0)        ,      2.7182783069905721654, "fermi_dirac(20,   1.0)", TEST_TOL0)
compare(sf.fermi_dirac(20,   3.0)        ,      20.085345296028242734, "fermi_dirac(20,   3.0)", TEST_TOL2)
compare(sf.fermi_dirac(20,  10.0)        ,      21898.072920149606475, "fermi_dirac(20,  10.0)", TEST_TOL2)
compare(sf.fermi_dirac(20,  50.0)        ,   1.236873256595717618e+16, "fermi_dirac(20,  50.0)", TEST_TOL2)
compare(sf.fermi_dirac(20, 500.0)        ,   9.358938204369557277e+36, "fermi_dirac(20, 500.0)", TEST_TOL2)
compare(sf.gegenpoly(1,       1.0, 1.0)  ,        2.000              , "gegenpoly(1,       1.0, 1.0)", TEST_TOL0)
compare(sf.gegenpoly(10,      1.0, 1.0)  ,        11.000             , "gegenpoly(10,      1.0, 1.0)", TEST_TOL0)
compare(sf.gegenpoly(10,      1.0, 0.1)  ,        -0.4542309376      , "gegenpoly(10,      1.0, 0.1)", TEST_TOL0)
compare(sf.gegenpoly(10,      5.0, 1.0)  ,        9.23780e+4         , "gegenpoly(10,      5.0, 1.0)", TEST_TOL0)
compare(sf.gegenpoly(10,    100.0, 0.5)  ,     1.5729338392690000e+13, "gegenpoly(10,    100.0, 0.5)", TEST_TOL0)
compare(sf.gegenpoly(1000,  100.0, 1.0)  ,    3.3353666135627322e+232, "gegenpoly(1000,  100.0, 1.0)", TEST_TOL1)
compare(sf.gegenpoly(100,  2000.0, 1.0)  ,    5.8753432034937579e+202, "gegenpoly(100,  2000.0, 1.0)", TEST_TOL0)
compare(sf.gegenpoly(103,   207.0, 2.0)  ,    1.4210272202235983e+145, "gegenpoly(103,   207.0, 2.0)", TEST_TOL0)
compare(sf.gegenpoly(103,    -0.4, 0.3)  ,      -1.64527498094522e-04, "gegenpoly(103,    -0.4, 0.3)", TEST_TOL1)
compare(sf.laguerre(1, 0.5, 1.0)         ,                        0.5, "laguerre(1, 0.5, 1.0)", TEST_TOL0)
compare(sf.laguerre(2, 1.0, 1.0)         ,                        0.5, "laguerre(2, 1.0, 1.0)", TEST_TOL1)
compare(sf.laguerre(3, 2.0, 1.0)         ,      2.3333333333333333333, "laguerre(3, 2.0, 1.0)", TEST_TOL1)
compare(sf.laguerre(4, 2.0, 0.5)         ,       6.752604166666666667, "laguerre(4, 2.0, 0.5)", TEST_TOL1)
compare(sf.laguerre(90, 2.0,  0.5)       ,      -48.79047157201507897, "laguerre(90, 2.0,  0.5)", TEST_TOL1)
compare(sf.laguerre(90, 2.0, -100.0)     ,  2.5295879275042410902e+63, "laguerre(90, 2.0, -100.0)", TEST_TOL2)
compare(sf.laguerre(90, 2.0,  100.0)     ,  -2.0929042259546928670e+20, "laguerre(90, 2.0,  100.0)", TEST_TOL1)
compare(sf.laguerre(100, 2.0, -0.5)      ,  2.2521795545919391405e+07, "laguerre(100, 2.0, -0.5)", TEST_TOL2)
compare(sf.laguerre(100, 2.0,  0.5)      ,     -28.764832945909097418, "laguerre(100, 2.0,  0.5)", TEST_TOL2)
compare(sf.laguerre(1000, 2.0, -0.5)     ,  2.4399915170947549589e+21, "laguerre(1000, 2.0, -0.5)", TEST_TOL3)
compare(sf.laguerre(1000, 2.0,  0.5)     ,     -306.77440254315317525, "laguerre(1000, 2.0,  0.5)", TEST_TOL2)
compare(sf.laguerre(100000, 2.0, 1.0)    ,           5107.73491348319, "laguerre(100000, 2.0, 1.0)", TEST_TOL4)
compare(sf.laguerre(1e5, 2.5, 2.5)       ,  -0.41491680394598644969113795e5, "laguerre(1e5, 2.5, 2.5)", TEST_TOL4)
compare(sf.laguerre(1e5+1, 2.5, 2.5)     ,  -0.41629446949552321027514888e5, "laguerre(1e5+1, 2.5, 2.5)", TEST_TOL4)
compare(sf.laguerre(1e6+1, 2.5, 2.5)     ,  -0.48017961545391273151977118e6, "laguerre(1e6+1, 2.5, 2.5)", TEST_TOL4)
compare(sf.laguerre(5e6+1, 2.5, 2.5)     ,  -0.15174037401611122446089494e7, "laguerre(5e6+1, 2.5, 2.5)", TEST_TOL6)
compare(sf.laguerre(8e6+1, 2.5, 2.5)     ,  0.63251509472091810994286362e6, "laguerre(8e6+1, 2.5, 2.5)", TEST_SNGL)
compare(sf.laguerre(1e7+1, 2.5, 2.5)     ,  0.15299484685632983178033887e7, "laguerre(1e7+1, 2.5, 2.5)", TEST_SNGL)
compare(sf.laguerre(1e8+1, 2.5, 2.5)     ,  0.23645341644922756725290777e8, "laguerre(1e8+1, 2.5, 2.5)", TEST_SNGL)
compare(sf.laguerre(1e9+1, 2.5, 2.5)     ,  -0.17731002248958790286185878e8, "laguerre(1e9+1, 2.5, 2.5)", 100*TEST_SNGL)
compare(sf.laguerre(1, -2.0, 1.0)        ,                       -2.0, "laguerre(1, -2.0, 1.0)", TEST_TOL0)
--[[ Only works if we disable GSL error handler...
compare(sf.laguerre(2, -2.0, 1.0)        ,                        0.5, "laguerre(2, -2.0, 1.0)", TEST_TOL0)
compare(sf.laguerre(3, -2.0, 1.0)        ,                    1.0/3.0, "laguerre(3, -2.0, 1.0)", TEST_TOL0)
--]]
compare(sf.laguerre(10, -2.0, 1.0)       ,    -0.04654954805996472663, "laguerre(10, -2.0, 1.0)", TEST_TOL2)
compare(sf.laguerre(10, -5.0, 1.0)       ,  -0.0031385030864197530864, "laguerre(10, -5.0, 1.0)", TEST_TOL2)
compare(sf.laguerre(10, -9.0, 1.0)       ,  -2.480158730158730159e-06, "laguerre(10, -9.0, 1.0)", TEST_TOL5)
compare(sf.laguerre(10, -11.0,  1.0)     ,      2.7182818011463844797, "laguerre(10, -11.0,  1.0)", TEST_TOL2)
compare(sf.laguerre(10, -11.0, -1.0)     ,      0.3678794642857142857, "laguerre(10, -11.0, -1.0)", TEST_TOL2)
compare(sf.laguerre(100, -2.0,  1.0)     ,  -0.0027339992019526273866, "laguerre(100, -2.0,  1.0)", TEST_SQRT_TOL0)
compare(sf.laguerre(100, -2.0, -1.0)     ,      229923.09193402028290, "laguerre(100, -2.0, -1.0)", TEST_TOL5)
compare(sf.laguerre(100, -10.0,  1.0)    ,    3.25966665871244092e-11, "laguerre(100, -10.0,  1.0)", TEST_TOL6)
compare(sf.laguerre(100, -10.0, -1.0)    ,  0.00016484365618205810025, "laguerre(100, -10.0, -1.0)", TEST_TOL6)
compare(sf.laguerre(100, -20.0, 1.0)     ,    5.09567630343671251e-21, "laguerre(100, -20.0, 1.0)", TEST_TOL3)
compare(sf.laguerre(100, -30.0, 1.0)     ,    3.46063150272466192e-34, "laguerre(100, -30.0, 1.0)", TEST_TOL1)
compare(sf.laguerre(100, -50.0,  1.0)    ,    1.20981872933162889e-65, "laguerre(100, -50.0,  1.0)", TEST_TOL1)
compare(sf.laguerre(100, -50.0, -1.0)    ,    8.60763477742332922e-65, "laguerre(100, -50.0, -1.0)", TEST_TOL1)
compare(sf.laguerre(100, -50.5,  1.0)    ,    4.84021010426688393e-31, "laguerre(100, -50.5,  1.0)", TEST_TOL1)
compare(sf.laguerre(100, -50.5, -1.0)    ,    8.49861345212160618e-33, "laguerre(100, -50.5, -1.0)", TEST_TOL1)
compare(sf.laguerre(100, -101.0,  1.0)   ,      2.7182818284590452354, "laguerre(100, -101.0,  1.0)", TEST_TOL1)
compare(sf.laguerre(100, -101.0, -1.0)   ,      0.3678794411714423216, "laguerre(100, -101.0, -1.0)", TEST_TOL1)
--[[ Only works if we disable GSL error handler...
compare(sf.laguerre(100, -102.0,  1.0)   ,       271.8281828459045235, "laguerre(100, -102.0,  1.0)", TEST_TOL1)
--]]
compare(sf.laguerre(100, -102.0, -1.0)   ,       37.52370299948711680, "laguerre(100, -102.0, -1.0)", TEST_TOL1)
--[[ Only works if we disable GSL error handler...
compare(sf.laguerre(100, -110.0,  1.0)   ,  1.0666955248998831554e+13, "laguerre(100, -110.0,  1.0)", TEST_TOL1)
--]]
compare(sf.laguerre(100, -110.0, -1.0)   ,  1.7028306108058225871e+12, "laguerre(100, -110.0, -1.0)", TEST_TOL1)
--[[ Only works if we disable GSL error handler...
compare(sf.laguerre(100, -200.0,  1.0)   ,    7.47851889721356628e+58, "laguerre(100, -200.0,  1.0)", TEST_TOL1)
--]]
compare(sf.laguerre(100, -200.0, -1.0)   ,    2.73740299754732273e+58, "laguerre(100, -200.0, -1.0)", TEST_TOL1)
compare(sf.laguerre(100, -50.0,  10.0)   ,   4.504712811317745591e-21, "laguerre(100, -50.0,  10.0)", TEST_SQRT_TOL0)
compare(sf.laguerre(100, -50.0, -10.0)   ,   1.475165520610679937e-11, "laguerre(100, -50.0, -10.0)", TEST_TOL1)
compare(sf.laguerre(100, 0.0, 0.5)       ,     0.18682260367692278801, "laguerre(100, 0.0, 0.5)", TEST_TOL2)
compare(sf.laguerre(100, 0.0, 10.5)      ,      9.1796907354050059874, "laguerre(100, 0.0, 10.5)", TEST_TOL2)
compare(sf.laguerre(100, 0.0, -10.5)     ,   5.6329215744170606488e24, "laguerre(100, 0.0, -10.5)", TEST_TOL2)
compare(sf.laguerre(100, 0.0, 100.5)     ,  -3.9844782875811907525e20, "laguerre(100, 0.0, 100.5)", TEST_TOL2)
compare(sf.laguerre(100, 0.0, 150)       ,  -1.4463204337261709595e31, "laguerre(100, 0.0, 150)", TEST_TOL2)
compare(sf.lambertW0(0.0)                ,                        0.0, "lambertW0(0.0)", TEST_TOL0)
compare(sf.lambertW0(1.0)                ,  0.567143290409783872999969, "lambertW0(1.0)", TEST_TOL0)
compare(sf.lambertW0(2.0)                ,  0.852605502013725491346472, "lambertW0(2.0)", TEST_TOL0)
compare(sf.lambertW0(20.0)               ,  2.205003278024059970493066, "lambertW0(20.0)", TEST_TOL0)
compare(sf.lambertW0(1000.0)             ,  5.24960285240159622712606, "lambertW0(1000.0)", TEST_TOL0)
compare(sf.lambertW0(1.0e+6)             ,  11.38335808614005262200016, "lambertW0(1.0e+6)", TEST_TOL0)
compare(sf.lambertW0(1.0e+12)            ,  24.43500440493491313826305, "lambertW0(1.0e+12)", TEST_TOL0)
compare(sf.lambertW0(1.0e+308)           ,  702.641362034106812081125, "lambertW0(1.0e+308)", TEST_TOL0)
compare(sf.lambertW0(1.6849341956993852953416990),  0.775706963944252869680440, "lambertW0(1.6849341956993852953416990)", TEST_TOL0)
compare(sf.lambertW0(-1.0/M_E + 1.0/(1024.0*1024.0*1024.0)),  -0.999928845560308370714970, "lambertW0(-1.0/M_E + 1.0/(1024.0*1024.0*1024.0))", TEST_TOL0)
compare(sf.lambertW0(-1.0/M_E + 1.0/(1024.0*1024.0)),  -0.997724730359774141620354, "lambertW0(-1.0/M_E + 1.0/(1024.0*1024.0))", TEST_TOL0)
compare(sf.lambertW0(-1.0/M_E + 1.0/512.0),  -0.900335676696088773044678, "lambertW0(-1.0/M_E + 1.0/512.0)", TEST_TOL0)
compare(sf.lambertW0(-1.0/M_E + 0.25)    ,  -0.1349044682661213545487599, "lambertW0(-1.0/M_E + 0.25)", TEST_TOL0)
compare(sf.lambertWm1(0.0)               ,                        0.0, "lambertWm1(0.0)", TEST_TOL0)
compare(sf.lambertWm1(1.0)               ,  0.567143290409783872999969, "lambertWm1(1.0)", TEST_TOL0)
compare(sf.lambertWm1(2.0)               ,  0.852605502013725491346472, "lambertWm1(2.0)", TEST_TOL0)
compare(sf.lambertWm1(20.0)              ,  2.205003278024059970493066, "lambertWm1(20.0)", TEST_TOL0)
compare(sf.lambertWm1(-1.0/M_E + 1.0/(1024.0*1024.0*1024.0)),  -1.000071157815154608049055, "lambertWm1(-1.0/M_E + 1.0/(1024.0*1024.0*1024.0))", TEST_TOL1)
compare(sf.lambertWm1(-1.0/M_E + 1.0/(1024.0*1024.0)),  -1.002278726118593023934693, "lambertWm1(-1.0/M_E + 1.0/(1024.0*1024.0))", TEST_TOL1)
compare(sf.lambertWm1(-1.0/M_E + 1.0/512.0),  -1.106761200865743124599130, "lambertWm1(-1.0/M_E + 1.0/512.0)", TEST_TOL1)
compare(sf.lambertWm1(-1.0/M_E + 1.0/64.0),  -1.324240940341812125489772, "lambertWm1(-1.0/M_E + 1.0/64.0)", TEST_TOL1)
compare(sf.lambertWm1(-1.0/M_E + 0.25)   ,         -3.345798131120112, "lambertWm1(-1.0/M_E + 0.25)", TEST_TOL1)
compare(sf.log(0.1)                      ,     -2.3025850929940456840, "log(0.1)", TEST_TOL0)
compare(sf.log(1.1)                      ,     0.09531017980432486004, "log(1.1)", TEST_TOL1)
compare(sf.log(1000.0)                   ,       6.907755278982137052, "log(1000.0)", TEST_TOL0)
compare(sf.log_abs(-0.1)                 ,     -2.3025850929940456840, "log_abs(-0.1)", TEST_TOL0)
compare(sf.log_abs(-1.1)                 ,     0.09531017980432486004, "log_abs(-1.1)", TEST_TOL1)
compare(sf.log_abs(-1000.0)              ,       6.907755278982137052, "log_abs(-1000.0)", TEST_TOL0)
compare(sf.log_abs(0.1)                  ,     -2.3025850929940456840, "log_abs(0.1)", TEST_TOL0)
compare(sf.log_abs(1.1)                  ,     0.09531017980432486004, "log_abs(1.1)", TEST_TOL1)
compare(sf.log_abs(1000.0)               ,       6.907755278982137052, "log_abs(1000.0)", TEST_TOL0)
compare(sf.log_1plusx(1.0e-10)           ,   9.999999999500000000e-11, "log_1plusx(1.0e-10)", TEST_TOL0)
compare(sf.log_1plusx(1.0e-8)            ,   9.999999950000000333e-09, "log_1plusx(1.0e-8)", TEST_TOL0)
compare(sf.log_1plusx(1.0e-4)            ,  0.00009999500033330833533, "log_1plusx(1.0e-4)", TEST_TOL0)
compare(sf.log_1plusx(0.1)               ,     0.09531017980432486004, "log_1plusx(0.1)", TEST_TOL0)
compare(sf.log_1plusx(0.49)              ,      0.3987761199573677730, "log_1plusx(0.49)", TEST_TOL0)
compare(sf.log_1plusx(-0.49)             ,     -0.6733445532637655964, "log_1plusx(-0.49)", TEST_TOL0)
compare(sf.log_1plusx(1.0)               ,                      M_LN2, "log_1plusx(1.0)", TEST_TOL0)
compare(sf.log_1plusx(-0.99)             ,      -4.605170185988091368, "log_1plusx(-0.99)", TEST_TOL0)
compare(sf.log_1plusx_mx(1.0e-10)        ,  -4.999999999666666667e-21, "log_1plusx_mx(1.0e-10)", TEST_TOL0)
compare(sf.log_1plusx_mx(1.0e-8)         ,  -4.999999966666666917e-17, "log_1plusx_mx(1.0e-8)", TEST_TOL0)
compare(sf.log_1plusx_mx(1.0e-4)         ,  -4.999666691664666833e-09, "log_1plusx_mx(1.0e-4)", TEST_TOL0)
compare(sf.log_1plusx_mx(0.1)            ,   -0.004689820195675139956, "log_1plusx_mx(0.1)", TEST_TOL0)
compare(sf.log_1plusx_mx(0.49)           ,    -0.09122388004263222704, "log_1plusx_mx(0.49)", TEST_TOL0)
compare(sf.log_1plusx_mx(-0.49)          ,    -0.18334455326376559639, "log_1plusx_mx(-0.49)", TEST_TOL0)
compare(sf.log_1plusx_mx(1.0)            ,                  M_LN2-1.0, "log_1plusx_mx(1.0)", TEST_TOL0)
compare(sf.log_1plusx_mx(-0.99)          ,      -3.615170185988091368, "log_1plusx_mx(-0.99)", TEST_TOL0)
compare(sf.pow_int(2.0, 3)               ,                        8.0, "pow_int(2.0, 3)", TEST_TOL0)
compare(sf.pow_int(-2.0, 3)              ,                       -8.0, "pow_int(-2.0, 3)", TEST_TOL0)
compare(sf.pow_int(2.0, -3)              ,                    1.0/8.0, "pow_int(2.0, -3)", TEST_TOL0)
compare(sf.pow_int(-2.0, -3)             ,                   -1.0/8.0, "pow_int(-2.0, -3)", TEST_TOL0)
compare(sf.pow_int(10.0, 4)              ,                     1.0e+4, "pow_int(10.0, 4)", TEST_TOL0)
compare(sf.pow_int(10.0, -4)             ,                     1.0e-4, "pow_int(10.0, -4)", TEST_TOL0)
compare(sf.pow_int(-10.0, 4)             ,                     1.0e+4, "pow_int(-10.0, 4)", TEST_TOL0)
compare(sf.pow_int(-10.0, -4)            ,                     1.0e-4, "pow_int(-10.0, -4)", TEST_TOL0)
compare(sf.pow_int(10.0, 40)             ,                    1.0e+40, "pow_int(10.0, 40)", TEST_TOL0)
compare(sf.pow_int(8.0, -40)             ,   7.523163845262640051e-37, "pow_int(8.0, -40)", TEST_TOL0)
compare(sf.pow_int(-10.0, 40)            ,                    1.0e+40, "pow_int(-10.0, 40)", TEST_TOL0)
compare(sf.pow_int(-8.0, -40)            ,   7.523163845262640051e-37, "pow_int(-8.0, -40)", TEST_TOL0)
compare(sf.pow_int(10.0, 41)             ,                    1.0e+41, "pow_int(10.0, 41)", TEST_TOL0)
compare(sf.pow_int(8.0, -41)             ,   9.403954806578300064e-38, "pow_int(8.0, -41)", TEST_TOL0)
compare(sf.pow_int(-10.0, 41)            ,                   -1.0e+41, "pow_int(-10.0, 41)", TEST_TOL0)
compare(sf.pow_int(-8.0, -41)            ,  -9.403954806578300064e-38, "pow_int(-8.0, -41)", TEST_TOL0)
compare(sf.psi(5000.0)                   ,       8.517093188082904107, "psi(5000.0)", TEST_TOL0)
compare(sf.psi(5.0)                      ,      1.5061176684318004727, "psi(5.0)", TEST_TOL0)
compare(sf.psi(-10.5)                    ,      2.3982391295357816134, "psi(-10.5)", TEST_TOL0)
compare(sf.psi(-100.5)                   ,       4.615124601338064117, "psi(-100.5)", TEST_TOL2)
compare(sf.psi(-1.0e+5-0.5)              ,      11.512935464924395337, "psi(-1.0e+5-0.5)", 4.0*TEST_TOL4)
compare(sf.psi(-262144.0-0.5)            ,      12.476653064769611581, "psi(-262144.0-0.5)", 4.0*TEST_TOL4)
compare(sf.psi_1piy(0.8)                 ,    -0.07088340212750589223, "psi_1piy(0.8)", TEST_TOL1)
compare(sf.psi_1piy(1.0)                 ,     0.09465032062247697727, "psi_1piy(1.0)", TEST_TOL0)
compare(sf.psi_1piy(5.0)                 ,      1.6127848446157465854, "psi_1piy(5.0)", TEST_TOL2)
compare(sf.psi_1piy(100.0)               ,       4.605178519404762003, "psi_1piy(100.0)", TEST_TOL0)
compare(sf.psi_1piy(2000.0)              ,       7.600902480375416216, "psi_1piy(2000.0)", TEST_TOL0)
compare(sf.psi_1piy(-0.8)                ,    -0.07088340212750589223, "psi_1piy(-0.8)", TEST_TOL1)
compare(sf.psi_1piy(-1.0)                ,     0.09465032062247697727, "psi_1piy(-1.0)", TEST_TOL0)
compare(sf.psi_1piy(-5.0)                ,      1.6127848446157465854, "psi_1piy(-5.0)", TEST_TOL2)
compare(sf.psi_1piy(-100.0)              ,       4.605178519404762003, "psi_1piy(-100.0)", TEST_TOL0)
compare(sf.psi_1piy(-2000.0)             ,       7.600902480375416216, "psi_1piy(-2000.0)", TEST_TOL0)
compare(sf.psi_1(1.0/32.0)               ,      1025.5728544782377089, "psi_1(1.0/32.0)", TEST_TOL0)
compare(sf.psi_1(1.0)                    ,      1.6449340668482264365, "psi_1(1.0)", TEST_TOL0)
compare(sf.psi_1(5.0)                    ,     0.22132295573711532536, "psi_1(5.0)", TEST_TOL0)
compare(sf.psi_1(100.0)                  ,    0.010050166663333571395, "psi_1(100.0)", TEST_TOL0)
compare(sf.psi_1(110.0)                  ,    0.009132356622022545705, "psi_1(110.0)", TEST_TOL0)
compare(sf.psi_1(500.0)                  ,   0.0020020013333322666697, "psi_1(500.0)", TEST_TOL0)
compare(sf.psi_1(-1.0 - 1.0/128.0)       ,      16386.648472598746587, "psi_1(-1.0 - 1.0/128.0)", TEST_TOL0)
compare(sf.psi_1(-1.50)                  ,      9.3792466449891237539, "psi_1(-1.50)", TEST_TOL0)
compare(sf.psi_1(-10.5)                  ,      9.7787577398148123845, "psi_1(-10.5)", TEST_TOL0)
compare(sf.psi_1(-15.5)                  ,      9.8071247184113896201, "psi_1(-15.5)", TEST_TOL0)
compare(sf.psi_1(-50.5)                  ,      9.8499971860824842274, "psi_1(-50.5)", TEST_TOL0)
compare(sf.psi_1(-1000.5)                ,      9.8686054001734414233, "psi_1(-1000.5)", TEST_TOL0)
compare(sf.psi_n(1, 1)                   ,      1.6449340668482264364, "psi_n(1, 1)", TEST_TOL0)
compare(sf.psi_n(1, 2)                   ,     0.64493406684822643647, "psi_n(1, 2)", TEST_TOL0)
compare(sf.psi_n(1, 3)                   ,     0.39493406684822643647, "psi_n(1, 3)", TEST_TOL0)
compare(sf.psi_n(1, 4)                   ,     0.28382295573711532536, "psi_n(1, 4)", TEST_TOL0)
compare(sf.psi_n(1, 5)                   ,     0.22132295573711532536, "psi_n(1, 5)", TEST_TOL0)
compare(sf.psi_n(1, 100)                 ,    0.010050166663333571395, "psi_n(1, 100)", TEST_TOL0)
compare(sf.psi_n(1, 110)                 ,    0.009132356622022545705, "psi_n(1, 110)", TEST_TOL0)
compare(sf.psi_n(1, 500)                 ,   0.0020020013333322666697, "psi_n(1, 500)", TEST_TOL0)
compare(sf.psi_n(3, 5.0)                 ,    0.021427828192755075022, "psi_n(3, 5.0)", TEST_TOL0)
compare(sf.psi_n(3, 500.0)               ,  1.6048063999872000683e-08, "psi_n(3, 500.0)", TEST_TOL0)
compare(sf.psi_n(10, 5.0)                ,    -0.08675107579196581317, "psi_n(10, 5.0)", TEST_TOL1)
compare(sf.psi_n(10, 50.0)               ,  -4.101091112731268288e-12, "psi_n(10, 50.0)", TEST_TOL0)
compare(sf.psi_n(0, -1.5)                ,     0.70315664064524318723, "psi_n(0, -1.5)", TEST_TOL0)
compare(sf.psi_n(1, -1.5)                ,      9.3792466449891237539, "psi_n(1, -1.5)", TEST_TOL0)
compare(sf.synchrotron1(0.01)            ,       0.444972504114210632, "synchrotron1(0.01)", TEST_TOL0)
compare(sf.synchrotron1(1.0)             ,       0.651422815355364504, "synchrotron1(1.0)", TEST_TOL1)
compare(sf.synchrotron1(10.0)            ,    0.000192238264300868882, "synchrotron1(10.0)", TEST_TOL1)
compare(sf.synchrotron1(100.0)           ,    4.69759366592220221e-43, "synchrotron1(100.0)", TEST_TOL1)
compare(sf.synchrotron2(0.01)            ,     0.23098077342226277732, "synchrotron2(0.01)", TEST_TOL2)
compare(sf.synchrotron2(1.0)             ,      0.4944750621042082670, "synchrotron2(1.0)", TEST_TOL1)
compare(sf.synchrotron2(10.0)            ,  0.00018161187569530204281, "synchrotron2(10.0)", TEST_TOL1)
compare(sf.zeta(-151)                    ,  8.195215221831378294e+143, "zeta(-151)", TEST_TOL2)
compare(sf.zeta(-51)                     ,  9.68995788746359406565e+24, "zeta(-51)", TEST_TOL1)
compare(sf.zeta(-5)                      ,  -0.003968253968253968253968, "zeta(-5)", TEST_TOL1)
compare(sf.zeta(-8)                      ,                        0.0, "zeta(-8)", TEST_TOL1)
compare(sf.zeta(-6)                      ,                        0.0, "zeta(-6)", TEST_TOL1)
compare(sf.zeta(-4)                      ,                        0.0, "zeta(-4)", TEST_TOL1)
compare(sf.zeta(-3)                      ,                  1.0/120.0, "zeta(-3)", TEST_TOL1)
compare(sf.zeta(-2)                      ,                        0.0, "zeta(-2)", TEST_TOL1)
compare(sf.zeta(-1)                      ,                  -1.0/12.0, "zeta(-1)", TEST_TOL1)
compare(sf.zeta(-0.5)                    ,  -0.207886224977354566017307, "zeta(-0.5)", TEST_TOL1)
compare(sf.zeta(-1e-10)                  ,  -0.49999999990810614668948, "zeta(-1e-10)", TEST_TOL1)
compare(sf.zeta(0.0)                     ,                       -0.5, "zeta(0.0)", TEST_TOL0)
compare(sf.zeta(1e-10)                   ,  -0.50000000009189385333058, "zeta(1e-10)", TEST_TOL0)
compare(sf.zeta(0.5)                     ,  -1.460354508809586812889499, "zeta(0.5)", TEST_TOL0)
compare(sf.zeta(1.0-1.0/1024.0)          ,     -1023.4228554489429787, "zeta(1.0-1.0/1024.0)", TEST_TOL0)
compare(sf.zeta(1.0+1.0/1048576)         ,  1.0485765772157343441e+06, "zeta(1.0+1.0/1048576)", TEST_TOL0)
compare(sf.zeta(5.0)                     ,  1.036927755143369926331365, "zeta(5.0)", TEST_TOL0)
compare(sf.zeta(25.5)                    ,  1.000000021074106110269959, "zeta(25.5)", TEST_TOL0)
compare(sf.zetam1(-8)                    ,                       -1.0, "zetam1(-8)", TEST_TOL1)
compare(sf.zetam1(-6)                    ,                       -1.0, "zetam1(-6)", TEST_TOL1)
compare(sf.zetam1(-4)                    ,                       -1.0, "zetam1(-4)", TEST_TOL1)
compare(sf.zetam1(-3)                    ,               -119.0/120.0, "zetam1(-3)", TEST_TOL1)
compare(sf.zetam1(-2)                    ,                       -1.0, "zetam1(-2)", TEST_TOL1)
compare(sf.zetam1(-1)                    ,                 -13.0/12.0, "zetam1(-1)", TEST_TOL1)
compare(sf.zetam1(-0.5)                  ,  -1.207886224977354566017307, "zetam1(-0.5)", TEST_TOL1)
compare(sf.zetam1(-1e-10)                ,  -1.49999999990810614668948, "zetam1(-1e-10)", TEST_TOL1)
compare(sf.zetam1(0.0)                   ,                       -1.5, "zetam1(0.0)", TEST_TOL0)
compare(sf.zetam1(1e-10)                 ,  -1.50000000009189385333058, "zetam1(1e-10)", TEST_TOL0)
compare(sf.zetam1(0.5)                   ,  -2.460354508809586812889499, "zetam1(0.5)", TEST_TOL0)
compare(sf.zetam1(2.0)                   ,     0.64493406684822643647, "zetam1(2.0)", TEST_TOL1)
compare(sf.zetam1(3.0)                   ,     0.20205690315959428540, "zetam1(3.0)", TEST_TOL1)
compare(sf.zetam1(5.0)                   ,   0.0369277551433699263314, "zetam1(5.0)", TEST_TOL1)
compare(sf.zetam1(9.5)                   ,   0.0014125906121736622712, "zetam1(9.5)", TEST_TOL1)
compare(sf.zetam1(10.5)                  ,  0.000700842641736155219500, "zetam1(10.5)", TEST_TOL1)
compare(sf.zetam1(12.5)                  ,  0.000173751733643178193390, "zetam1(12.5)", TEST_TOL1)
compare(sf.zetam1(13.5)                  ,  0.000086686727462338155188, "zetam1(13.5)", TEST_TOL1)
compare(sf.zetam1(15.5)                  ,  0.000021619904246069108133, "zetam1(15.5)", TEST_TOL1)
compare(sf.zetam1(16.5)                  ,  0.000010803124900178547671, "zetam1(16.5)", TEST_TOL0)
compare(sf.zetam1(25.5)                  ,  0.000000021074106110269959, "zetam1(25.5)", TEST_TOL0)
compare(sf.hzeta(2,  1.0)                ,      1.6449340668482264365, "hzeta(2,  1.0)", TEST_TOL0)
compare(sf.hzeta(2, 10.0)                ,      0.1051663356816857461, "hzeta(2, 10.0)", TEST_TOL0)
compare(sf.hzeta(5,  1.0)                ,      1.0369277551433699263, "hzeta(5,  1.0)", TEST_TOL0)
compare(sf.hzeta(5, 10.0)                ,    0.000030413798676470276, "hzeta(5, 10.0)", TEST_TOL0)
compare(sf.hzeta(9,  0.1)                ,     1.0000000004253980e+09, "hzeta(9,  0.1)", TEST_TOL0)
compare(sf.hzeta(30, 0.5)                ,     1.0737418240000053e+09, "hzeta(30, 0.5)", TEST_TOL0)
compare(sf.hzeta(30, 0.9)                ,     2.3589824880264765e+01, "hzeta(30, 0.9)", TEST_TOL1)
compare(sf.hzeta(75, 0.25)               ,     1.4272476927059599e+45, "hzeta(75, 0.25)", TEST_TOL1)
compare(sf.eta(-51.5)                    ,  -1.2524184036924703656e+41, "eta(-51.5)", TEST_TOL2)
compare(sf.eta(-5)                       ,                       0.25, "eta(-5)", TEST_TOL0)
compare(sf.eta(0.5)                      ,      0.6048986434216303702, "eta(0.5)", TEST_TOL0)
compare(sf.eta(0.999)                    ,      0.6929872789683383574, "eta(0.999)", TEST_TOL0)
compare(sf.eta(1.0)                      ,      0.6931471805599453094, "eta(1.0)", TEST_TOL0)
compare(sf.eta(1.0+1.0e-10)              ,      0.6931471805759321998, "eta(1.0+1.0e-10)", TEST_TOL0)
compare(sf.eta( 5)                       ,      0.9721197704469093059, "eta( 5)", TEST_TOL0)
compare(sf.eta( 5.2)                     ,      0.9755278712546684682, "eta( 5.2)", TEST_TOL0)
compare(sf.eta( 6)                       ,      0.9855510912974351041, "eta( 6)", TEST_TOL0)
compare(sf.eta( 20)                      ,      0.9999990466115815221, "eta( 20)", TEST_TOL0)
