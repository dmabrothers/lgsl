local gsl = require("lgsl.gsl")
local sf= require("lgsl.sf")
local GSL_DBL_EPSILON, GSL_SQRT_DBL_EPSILON, GSL_LOG_DBL_MAX = 2.2204460492503131e-16, 1.4901161193847656e-08, 7.0978271289338397e+02
local function sprintf(...) io.write(string.format(...)) end
local sqrt, log, exp, M_PI, M_PI_2, DBL_MAX = math.sqrt, math.log, math.exp, math.pi, math.pi/2, 1.7976931348623157E+308
local function compare(val, ref, name, eps)
  eps = eps or 1e-9
  local inc = 0
  if val==0 or ref==0 then inc = 1 end
  if gsl.gsl_fcmp(val+inc,ref+inc,eps*100)==0 then
    sprintf("Pass %-30s: % .15e\n", name, ref,"\n")
  else
    sprintf("Fail %-30s: % .15e ~= % .15e\n", name, val, ref)
  end
end
local TEST_TOL0 = (2.0*GSL_DBL_EPSILON)
local TEST_TOL1 = (16.0*GSL_DBL_EPSILON)
local TEST_TOL2 = (256.0*GSL_DBL_EPSILON)
local TEST_TOL3 = (2048.0*GSL_DBL_EPSILON)
local TEST_TOL4 = (16384.0*GSL_DBL_EPSILON)
local TEST_TOL5 = (131072.0*GSL_DBL_EPSILON)
local TEST_TOL6 = (1048576.0*GSL_DBL_EPSILON)
local TEST_SQRT_TOL0 = (2.0*GSL_SQRT_DBL_EPSILON)
compare(sf.besselJ(4, 0.1)               ,  2.6028648545684032338e-07, "besselJ(4, 0.1)", TEST_TOL0)
compare(sf.besselJ(5, 2.0)               ,    0.007039629755871685484, "besselJ(5, 2.0)", TEST_TOL0)
compare(sf.besselJ(10, 20.0)             ,     0.18648255802394508321, "besselJ(10, 20.0)", TEST_TOL0)
compare(sf.besselJ(100, 100.0)           ,     0.09636667329586155967, "besselJ(100, 100.0)", TEST_TOL0)
compare(sf.besselJ(2, 900.0)             ,   -0.019974345269680646400, "besselJ(2, 900.0)", TEST_TOL4)
compare(sf.besselJ(2, 15000.0)           ,  -0.0020455820181216382666, "besselJ(2, 15000.0)", TEST_TOL4)
compare(sf.besselJ(0, 1.0e+10)           ,  2.1755917502468917269e-06, "besselJ(0, 1.0e+10)", TEST_SQRT_TOL0)
compare(sf.besselJ(1, 1.0e+10)           ,  -7.676508175684157103e-06, "besselJ(1, 1.0e+10)", TEST_TOL4)
compare(sf.besselJ(0, 20000)             ,  0.00556597490495494615709982972, "besselJ(0, 20000)", TEST_TOL4)
compare(sf.besselJ(45, 900.0)            ,     0.02562434700634278108, "besselJ(45, 900.0)", TEST_TOL0)
compare(sf.besselY(4, 0.1)               ,     -305832.29793353160319, "besselY(4, 0.1)", TEST_TOL1)
compare(sf.besselY(5, 2)                 ,      -9.935989128481974981, "besselY(5, 2)", TEST_TOL0)
compare(sf.besselY(100, 100.0)           ,    -0.16692141141757650654, "besselY(100, 100.0)", TEST_TOL0)
compare(sf.besselY(100, 4294967296.0)    ,   3.657889671577715808e-06, "besselY(100, 4294967296.0)", TEST_SQRT_TOL0)
compare(sf.besselY(1000, 4294967296.0)   ,   3.656551321485397501e-06, "besselY(1000, 4294967296.0)", 2.0e-05)
compare(sf.besselY(2, 15000.0)           ,   -0.006185217273358617849, "besselY(2, 15000.0)", TEST_TOL4)
compare(sf.besselI_scaled(  -4,    0.1)  ,  2.3575258620054605307e-07, "besselI_scaled(  -4,    0.1)", TEST_TOL0)
compare(sf.besselI_scaled(   4,    0.1)  ,  2.3575258620054605307e-07, "besselI_scaled(   4,    0.1)", TEST_TOL0)
compare(sf.besselI_scaled(   5,    2.0)  ,   0.0013297610941881578142, "besselI_scaled(   5,    2.0)", TEST_TOL0)
compare(sf.besselI_scaled( 100,  100.0)  ,  1.7266862628167695785e-22, "besselI_scaled( 100,  100.0)", TEST_TOL0)
compare(sf.besselI_scaled(   2,    1e7)  ,    1.261566024466416433e-4, "besselI_scaled(   2,    1e7)", TEST_TOL2)
compare(sf.besselI_scaled(   2,    1e8)  ,    3.989422729212649531e-5, "besselI_scaled(   2,    1e8)", TEST_TOL2)
compare(sf.besselI(   4,    0.1)         ,  2.6054690212996573677e-07, "besselI(   4,    0.1)", TEST_TOL0)
compare(sf.besselI(   5,    2.0)         ,    0.009825679323131702321, "besselI(   5,    2.0)", TEST_TOL0)
compare(sf.besselI( 100,  100.0)         ,   4.641534941616199114e+21, "besselI( 100,  100.0)", TEST_TOL2)
compare(sf.besselK_scaled(   4,    0.1)  ,       530040.2483725626207, "besselK_scaled(   4,    0.1)", TEST_TOL1)
compare(sf.besselK_scaled(   5,    2.0)  ,       69.68655087607675118, "besselK_scaled(   5,    2.0)", TEST_TOL0)
compare(sf.besselK_scaled( 100,  100.0)  ,  2.0475736731166756813e+19, "besselK_scaled( 100,  100.0)", TEST_TOL1)
compare(sf.besselK(   4,    0.1)         ,       479600.2497925682849, "besselK(   4,    0.1)", TEST_TOL1)
compare(sf.besselK(   5,    2.0)         ,       9.431049100596467443, "besselK(   5,    2.0)", TEST_TOL0)
compare(sf.besselK( 100,  100.0)         ,   7.617129630494085416e-25, "besselK( 100,  100.0)", TEST_TOL2)
compare(sf.besselj(0, 0.0)               ,                        1.0, "besselj(0, 0.0)", TEST_TOL0)
compare(sf.besselj(1,       10.0)        ,  0.07846694179875154709000, "besselj(1,       10.0)", TEST_TOL0)
compare(sf.besselj(5,        1.0)        ,  0.00009256115861125816357, "besselj(5,        1.0)", TEST_TOL0)
compare(sf.besselj(10,      10.0)        ,     0.06460515449256426427, "besselj(10,      10.0)", TEST_TOL0)
compare(sf.besselj(100,    100.0)        ,    0.010880477011438336539, "besselj(100,    100.0)", TEST_TOL1)
compare(sf.besselj(2000, 1048576.0)      ,   7.449384239168568534e-07, "besselj(2000, 1048576.0)", TEST_SQRT_TOL0)
compare(sf.besselj(2, 900.0)             ,  -0.0011089115568832940086, "besselj(2, 900.0)", TEST_TOL4)
compare(sf.besselj(2, 15000.0)           ,  -0.00005955592033075750554, "besselj(2, 15000.0)", TEST_TOL4)
compare(sf.besselj(100, 1000.0)          ,  -0.00025326311230945818285, "besselj(100, 1000.0)", TEST_TOL4)
compare(sf.besselj(30, 3878.62)          ,  -0.00023285567034330878410434732790, "besselj(30, 3878.62)", TEST_TOL4)
compare(sf.besselj(49, 9912.63)          ,  5.2043354544842669214485107019E-5 , "besselj(49, 9912.63)", TEST_TOL4)
compare(sf.besselj(49, 9950.35)          ,  5.0077368819565969286578715503E-5 , "besselj(49, 9950.35)", TEST_TOL4)
compare(sf.besselj(52, 9930.51)          ,  -7.4838588266727718650124475651E-6 , "besselj(52, 9930.51)", TEST_TOL4)
compare(sf.besselj(364, 36.62)           ,     1.118907148986954E-318, "besselj(364, 36.62)", TEST_TOL0)
compare(sf.bessely(0,        0.01)       ,        -99.995000041666528, "bessely(0,        0.01)", TEST_TOL0)
compare(sf.bessely(0,        1.0)        ,       -0.54030230586813972, "bessely(0,        1.0)", TEST_TOL0)
compare(sf.bessely(1,       10.0)        ,       0.062792826379701506, "bessely(1,       10.0)", TEST_TOL0)
compare(sf.bessely(5,        1.0)        ,        -999.44034339223641, "bessely(5,        1.0)", TEST_TOL0)
compare(sf.bessely(10,       0.01)       ,    -6.5473079797378378e+30, "bessely(10,       0.01)", TEST_TOL0)
compare(sf.bessely(10,      10.0)        ,      -0.172453672088057849, "bessely(10,      10.0)", TEST_TOL0)
compare(sf.bessely(100,      1.0)        ,   -6.6830794632586775e+186, "bessely(100,      1.0)", TEST_TOL1)
compare(sf.bessely(100,    100.0)        ,     -0.0229838504915622811, "bessely(100,    100.0)", TEST_TOL1)
compare(sf.bessely(2000, 1048576.0)      ,     5.9545201447146155e-07, "bessely(2000, 1048576.0)", TEST_SQRT_TOL0)
compare(sf.besseli_scaled(   0, 0.0)     ,                        1.0, "besseli_scaled(   0, 0.0)", TEST_TOL0)
compare(sf.besseli_scaled(   1, 0.0)     ,                        0.0, "besseli_scaled(   1, 0.0)", TEST_TOL0)
compare(sf.besseli_scaled(   4, 0.001)   ,  1.0571434341190365013e-15, "besseli_scaled(   4, 0.001)", TEST_TOL0)
compare(sf.besseli_scaled(   4,   0.1)   ,   9.579352242057134927e-08, "besseli_scaled(   4,   0.1)", TEST_TOL1)
compare(sf.besseli_scaled(   5,   2.0)   ,   0.0004851564602127540059, "besseli_scaled(   5,   2.0)", TEST_TOL0)
compare(sf.besseli_scaled(   5, 100.0)   ,    0.004300446777500000000, "besseli_scaled(   5, 100.0)", TEST_TOL1)
compare(sf.besseli_scaled( 100, 100.0)   ,  1.3898161964299132789e-23, "besseli_scaled( 100, 100.0)", TEST_TOL0)
compare(sf.besselk_scaled(   4, 1.0/256.0),  1.8205599816961954439e+14, "besselk_scaled(   4, 1.0/256.0)", TEST_TOL0)
compare(sf.besselk_scaled(   4, 1.0/8.0) ,  6.1173217814406597530e+06, "besselk_scaled(   4, 1.0/8.0)", TEST_TOL0)
compare(sf.besselk_scaled(   5,   2.0)   ,      138.10735829492005119, "besselk_scaled(   5,   2.0)", TEST_TOL0)
compare(sf.besselk_scaled( 100, 100.0)   ,   3.985930768060258219e+18, "besselk_scaled( 100, 100.0)", TEST_TOL1)
compare(sf.besselJnu(0.0001, 1.0)        ,      0.7652115411876708497, "besselJnu(0.0001, 1.0)", TEST_TOL2)
compare(sf.besselJnu(0.0001, 10.0)       ,        -0.2459270166445205, "besselJnu(0.0001, 10.0)", TEST_TOL2)
compare(sf.besselJnu(0.0009765625, 10.0) ,        -0.2458500798634692, "besselJnu(0.0009765625, 10.0)", TEST_TOL2)
compare(sf.besselJnu(0.75, 1.0)          ,      0.5586524932048917478, "besselJnu(0.75, 1.0)", TEST_TOL2)
compare(sf.besselJnu(0.75, 10.0)         ,    -0.04968928974751508135, "besselJnu(0.75, 10.0)", TEST_TOL2)
compare(sf.besselJnu( 1.0, 0.001)        ,      0.0004999999375000026, "besselJnu( 1.0, 0.001)", TEST_TOL0)
compare(sf.besselJnu( 1.0,   1.0)        ,      0.4400505857449335160, "besselJnu( 1.0,   1.0)", TEST_TOL0)
compare(sf.besselJnu( 1.75,  1.0)        ,    0.168593922545763170103, "besselJnu( 1.75,  1.0)", TEST_TOL1)
compare(sf.besselJnu(30.0,   1.0)        ,   3.482869794251482902e-42, "besselJnu(30.0,   1.0)", TEST_TOL0)
compare(sf.besselJnu(30.0, 100.0)        ,     0.08146012958117222297, "besselJnu(30.0, 100.0)", TEST_TOL1)
compare(sf.besselJnu(10.0,   1.0)        ,  2.6306151236874532070e-10, "besselJnu(10.0,   1.0)", TEST_TOL0)
compare(sf.besselJnu(10.0, 100.0)        ,    -0.05473217693547201474, "besselJnu(10.0, 100.0)", TEST_TOL2)
compare(sf.besselJnu(10.2, 100.0)        ,    -0.03548919161046526864, "besselJnu(10.2, 100.0)", TEST_TOL2)
compare(sf.besselJnu(2.0, 900.0)         ,   -0.019974345269680646400, "besselJnu(2.0, 900.0)", TEST_TOL4)
compare(sf.besselJnu(2.0, 15000.0)       ,  -0.0020455820181216382666, "besselJnu(2.0, 15000.0)", TEST_TOL4)
compare(sf.besselYnu(0.0001, 1.0)        ,     0.08813676933044478439, "besselYnu(0.0001, 1.0)", TEST_TOL2)
compare(sf.besselYnu(0.0001,10.0)        ,     0.05570979797521875261, "besselYnu(0.0001,10.0)", TEST_TOL2)
compare(sf.besselYnu( 0.75,  1.0)        ,     -0.6218694174429746383, "besselYnu( 0.75,  1.0)", TEST_TOL0)
compare(sf.besselYnu( 0.75, 10.0)        ,     0.24757063446760384953, "besselYnu( 0.75, 10.0)", TEST_TOL0)
compare(sf.besselYnu( 1.0, 0.001)        ,      -636.6221672311394281, "besselYnu( 1.0, 0.001)", TEST_TOL0)
compare(sf.besselYnu( 1.0,   1.0)        ,     -0.7812128213002887165, "besselYnu( 1.0,   1.0)", TEST_TOL0)
compare(sf.besselYnu(30.0,   1.0)        ,  -3.0481287832256432162e+39, "besselYnu(30.0,   1.0)", TEST_TOL0)
compare(sf.besselYnu(30.0, 100.0)        ,    0.006138839212010033452, "besselYnu(30.0, 100.0)", TEST_TOL2)
compare(sf.besselYnu(10.0,   1.0)        ,  -1.2161801427868918929e+08, "besselYnu(10.0,   1.0)", TEST_TOL0)
compare(sf.besselYnu(10.0, 100.0)        ,     0.05833157423641492875, "besselYnu(10.0, 100.0)", TEST_TOL2)
compare(sf.besselYnu(10.2, 100.0)        ,     0.07169383985546287091, "besselYnu(10.2, 100.0)", TEST_TOL2)
compare(sf.besselInu_scaled(0.0001,10.0) ,     0.12783333709581669672, "besselInu_scaled(0.0001,10.0)", TEST_TOL0)
compare(sf.besselInu_scaled( 1.0, 0.001) ,   0.0004995003123542213370, "besselInu_scaled( 1.0, 0.001)", TEST_TOL0)
compare(sf.besselInu_scaled( 1.0,   1.0) ,     0.20791041534970844887, "besselInu_scaled( 1.0,   1.0)", TEST_TOL0)
compare(sf.besselInu_scaled(30.0,   1.0) ,  1.3021094983785914437e-42, "besselInu_scaled(30.0,   1.0)", TEST_TOL0)
compare(sf.besselInu_scaled(30.0, 100.0) ,   0.0004486987756920986146, "besselInu_scaled(30.0, 100.0)", TEST_TOL3)
compare(sf.besselInu_scaled(10.0,   1.0) ,  1.0127529864692066036e-10, "besselInu_scaled(10.0,   1.0)", TEST_TOL0)
compare(sf.besselInu_scaled(10.0, 100.0) ,    0.024176682718258828365, "besselInu_scaled(10.0, 100.0)", TEST_TOL3)
compare(sf.besselInu_scaled(10.2, 100.0) ,    0.023691628843913810043, "besselInu_scaled(10.2, 100.0)", TEST_TOL3)
compare(sf.besselInu(0.0001,10.0)        ,      2815.7166269770030352, "besselInu(0.0001,10.0)", TEST_TOL0)
compare(sf.besselInu( 1.0, 0.001)        ,   0.0005000000625000026042, "besselInu( 1.0, 0.001)", TEST_TOL0)
compare(sf.besselInu( 1.0,   1.0)        ,      0.5651591039924850272, "besselInu( 1.0,   1.0)", TEST_TOL0)
compare(sf.besselInu(30.0,   1.0)        ,   3.539500588106447747e-42, "besselInu(30.0,   1.0)", TEST_TOL0)
compare(sf.besselInu(30.0, 100.0)        ,  1.2061548704498434006e+40, "besselInu(30.0, 100.0)", TEST_TOL2)
compare(sf.besselInu(10.0,   1.0)        ,  2.7529480398368736252e-10, "besselInu(10.0,   1.0)", TEST_TOL0)
compare(sf.besselInu(10.0, 100.0)        ,   6.498975524720147799e+41, "besselInu(10.0, 100.0)", TEST_TOL2)
compare(sf.besselInu(10.2, 100.0)        ,   6.368587361287030443e+41, "besselInu(10.2, 100.0)", TEST_TOL2)
compare(sf.besselKnu_scaled(0.0001,10.0) ,      0.3916319346235421817, "besselKnu_scaled(0.0001,10.0)", TEST_TOL0)
compare(sf.besselKnu_scaled( 1.0, 0.001) ,      1000.9967345590684524, "besselKnu_scaled( 1.0, 0.001)", TEST_TOL0)
compare(sf.besselKnu_scaled( 1.0,   1.0) ,      1.6361534862632582465, "besselKnu_scaled( 1.0,   1.0)", TEST_TOL0)
compare(sf.besselKnu_scaled(30.0,   1.0) ,  1.2792629867539753925e+40, "besselKnu_scaled(30.0,   1.0)", TEST_TOL0)
compare(sf.besselKnu_scaled(30.0, 100.0) ,      10.673443449954850040, "besselKnu_scaled(30.0, 100.0)", TEST_TOL0)
compare(sf.besselKnu_scaled(10.0,   1.0) ,   4.912296520990198599e+08, "besselKnu_scaled(10.0,   1.0)", TEST_TOL0)
compare(sf.besselKnu_scaled(10.0, 100.0) ,     0.20578687173955779807, "besselKnu_scaled(10.0, 100.0)", TEST_TOL0)
compare(sf.besselKnu_scaled(10.0, 1000.0),     0.04165905142800565788, "besselKnu_scaled(10.0, 1000.0)", TEST_TOL0)
compare(sf.besselKnu_scaled(10.0, 1.0e+8),  0.00012533147624060789938, "besselKnu_scaled(10.0, 1.0e+8)", TEST_TOL0)
compare(sf.besselKnu_scaled(10.2, 100.0) ,     0.20995808355244385075, "besselKnu_scaled(10.2, 100.0)", TEST_TOL0)
compare(sf.besselKnu(0.0001,0.001)       ,       7.023689431812884141, "besselKnu(0.0001,0.001)", TEST_TOL0)
compare(sf.besselKnu(0.0001,10.0)        ,  0.000017780062324654874306, "besselKnu(0.0001,10.0)", TEST_TOL0)
compare(sf.besselKnu( 1.0, 0.001)        ,       999.9962381560855743, "besselKnu( 1.0, 0.001)", TEST_TOL0)
compare(sf.besselKnu( 1.0,   1.0)        ,      0.6019072301972345747, "besselKnu( 1.0,   1.0)", TEST_TOL0)
compare(sf.besselKnu(10.0, 0.001)        ,  1.8579455483904008064e+38, "besselKnu(10.0, 0.001)", TEST_TOL0)
compare(sf.besselKnu(10.0,   1.0)        ,  1.8071328990102945469e+08, "besselKnu(10.0,   1.0)", TEST_TOL0)
compare(sf.besselKnu(10.0, 100.0)        ,   7.655427977388100611e-45, "besselKnu(10.0, 100.0)", TEST_TOL2)
compare(sf.besselKnu(10.2, 100.0)        ,   7.810600225948217841e-45, "besselKnu(10.2, 100.0)", TEST_TOL2)
compare(sf.besselKnu(30.0,   1.0)        ,   4.706145526783626883e+39, "besselKnu(30.0,   1.0)", TEST_TOL1)
compare(sf.besselKnu(30.0, 100.0)        ,   3.970602055959398739e-43, "besselKnu(30.0, 100.0)", TEST_TOL2)
compare(sf.bessellnKnu(0.0001,1.0e-100)  ,          5.439794449319847, "bessellnKnu(0.0001,1.0e-100)", TEST_TOL0)
compare(sf.bessellnKnu(0.0001,0.0001)    ,          2.232835507214331, "bessellnKnu(0.0001,0.0001)", TEST_TOL0)
compare(sf.bessellnKnu(0.0001,10.0)      ,         -10.93743282256098, "bessellnKnu(0.0001,10.0)", TEST_TOL0)
compare(sf.bessellnKnu( 1.0, 1.0e-100)   ,          230.2585092994045, "bessellnKnu( 1.0, 1.0e-100)", TEST_TOL0)
compare(sf.bessellnKnu( 1.0, 1.0e-10)    ,      23.025850929940456840, "bessellnKnu( 1.0, 1.0e-10)", TEST_TOL0)
compare(sf.bessellnKnu( 1.0, 0.001)      ,          6.907751517131146, "bessellnKnu( 1.0, 0.001)", TEST_TOL0)
compare(sf.bessellnKnu( 1.0,   1.0)      ,     -0.5076519482107523309, "bessellnKnu( 1.0,   1.0)", TEST_TOL0)
compare(sf.bessellnKnu(30.0, 1.0e-100)   ,       6999.113586185543475, "bessellnKnu(30.0, 1.0e-100)", TEST_TOL0)
compare(sf.bessellnKnu(30.0,   1.0)      ,       91.34968784026325464, "bessellnKnu(30.0,   1.0)", TEST_TOL0)
compare(sf.bessellnKnu(30.0, 100.0)      ,      -97.63224126416760932, "bessellnKnu(30.0, 100.0)", TEST_TOL0)
compare(sf.bessellnKnu(100.0, 1.0e-100)  ,      23453.606706185466825, "bessellnKnu(100.0, 1.0e-100)", TEST_TOL0)
compare(sf.bessellnKnu(100.0, 1.0)       ,       427.7532510250188083, "bessellnKnu(100.0, 1.0)", TEST_TOL0)
compare(sf.bessellnKnu(100.0, 100.0)     ,      -55.53422771502921431, "bessellnKnu(100.0, 100.0)", TEST_TOL0)
compare(sf.bessellnKnu(1000.0, 1.0e-100) ,        236856.183755993135, "bessellnKnu(1000.0, 1.0e-100)", TEST_TOL0)
compare(sf.bessellnKnu(10000.0, 1.0e-100),    2.39161558914890695e+06, "bessellnKnu(10000.0, 1.0e-100)", TEST_TOL0)
compare(sf.bessellnKnu(180.0, 2.2)       ,  735.1994170369583930752590258, "bessellnKnu(180.0, 2.2)", TEST_TOL1)
compare(sf.bessellnKnu(3500.5, 1500.0)   ,  1731.220077116482710070986699, "bessellnKnu(3500.5, 1500.0)", TEST_TOL1)
local sa = 0
compare(sf.besselJ_zero(0.0,  1)         ,          2.404825557695771, "besselJ_zero(0.0,  1)", TEST_TOL1)
compare(sf.besselJ_zero(0.0,  2)         ,          5.520078110286304, "besselJ_zero(0.0,  2)", TEST_TOL1)
compare(sf.besselJ_zero(0.0, 20)         ,         62.048469190227081, "besselJ_zero(0.0, 20)", TEST_TOL1)
compare(sf.besselJ_zero(0.0, 25)         ,         77.756025630388058, "besselJ_zero(0.0, 25)", TEST_TOL1)
compare(sf.besselJ_zero(0.0, 100)        ,         313.37426607752784, "besselJ_zero(0.0, 100)", TEST_TOL1)
compare(sf.besselJ_zero( 1.5, 1)         ,         4.4934094579090641, "besselJ_zero( 1.5, 1)", TEST_TOL1)
compare(sf.besselJ_zero( 5.0, 1)         ,         8.7714838159599540, "besselJ_zero( 5.0, 1)", TEST_TOL1)
compare(sf.besselJ_zero( 1.5, 2)         ,         7.7252518369377072, "besselJ_zero( 1.5, 2)", TEST_TOL1)
compare(sf.besselJ_zero( 5.0, 2)         ,         12.338604197466944, "besselJ_zero( 5.0, 2)", TEST_TOL1)
compare(sf.besselJ_zero( 1.5, 3)         ,         10.904121659428900, "besselJ_zero( 1.5, 3)", TEST_TOL1)
compare(sf.besselJ_zero( 5.0, 3)         ,         15.700174079711671, "besselJ_zero( 5.0, 3)", TEST_TOL1)
compare(sf.besselJ_zero( 1.5, 4)         ,         14.066193912831473, "besselJ_zero( 1.5, 4)", TEST_TOL1)
compare(sf.besselJ_zero( 5.0, 4)         ,         18.980133875179921, "besselJ_zero( 5.0, 4)", TEST_TOL1)
compare(sf.besselJ_zero( 1.5, 5)         ,         17.220755271930768, "besselJ_zero( 1.5, 5)", TEST_TOL1)
compare(sf.besselJ_zero( 5.0, 5)         ,         22.217799896561268, "besselJ_zero( 5.0, 5)", TEST_SQRT_TOL0)
compare(sf.besselJ_zero( 8.0, 5)         ,         26.266814641176644, "besselJ_zero( 8.0, 5)", TEST_SQRT_TOL0)
compare(sf.besselJ_zero(20.0, 5)         ,         41.413065513892636, "besselJ_zero(20.0, 5)", TEST_SQRT_TOL0)
compare(sf.besselJ_zero( 1.5, 6)         ,         20.371302959287563, "besselJ_zero( 1.5, 6)", TEST_TOL1)
compare(sf.besselJ_zero( 5.0, 6)         ,         25.430341154222704, "besselJ_zero( 5.0, 6)", TEST_TOL1)
compare(sf.besselJ_zero( 8.0, 6)         ,         29.545659670998550, "besselJ_zero( 8.0, 6)", TEST_TOL1)
compare(sf.besselJ_zero( 1.5, 7)         ,         23.519452498689007, "besselJ_zero( 1.5, 7)", TEST_TOL1)
compare(sf.besselJ_zero( 5.0, 7)         ,         28.626618307291138, "besselJ_zero( 5.0, 7)", TEST_TOL1)
compare(sf.besselJ_zero( 8.0, 7)         ,         32.795800037341462, "besselJ_zero( 8.0, 7)", TEST_TOL1)
compare(sf.besselJ_zero( 1.5, 8)         ,         26.666054258812674, "besselJ_zero( 1.5, 8)", TEST_TOL1)
compare(sf.besselJ_zero( 5.0, 8)         ,         31.811716724047763, "besselJ_zero( 5.0, 8)", TEST_TOL1)
compare(sf.besselJ_zero(10.0, 8)         ,         38.761807017881651, "besselJ_zero(10.0, 8)", TEST_TOL1)
compare(sf.besselJ_zero( 1.5, 9)         ,         29.811598790892959, "besselJ_zero( 1.5, 9)", TEST_TOL1)
compare(sf.besselJ_zero( 5.0, 9)         ,         34.988781294559295, "besselJ_zero( 5.0, 9)", TEST_TOL1)
compare(sf.besselJ_zero(10.0, 9)         ,         42.004190236671805, "besselJ_zero(10.0, 9)", TEST_TOL1)
compare(sf.besselJ_zero( 1.5, 10)        ,         32.956389039822477, "besselJ_zero( 1.5, 10)", TEST_TOL1)
compare(sf.besselJ_zero( 5.0, 10)        ,         38.159868561967132, "besselJ_zero( 5.0, 10)", TEST_TOL1)
compare(sf.besselJ_zero(15.0, 10)        ,         52.017241278881633, "besselJ_zero(15.0, 10)", TEST_TOL1)
compare(sf.besselJ_zero( 5.0, 11)        ,         41.326383254047406, "besselJ_zero( 5.0, 11)", TEST_TOL1)
compare(sf.besselJ_zero(15.0, 11)        ,         55.289204146560061, "besselJ_zero(15.0, 11)", TEST_TOL1)
compare(sf.besselJ_zero( 5.0, 12)        ,        44.4893191232197314, "besselJ_zero( 5.0, 12)", TEST_TOL1)
compare(sf.besselJ_zero(15.0, 12)        ,        58.5458289043850856, "besselJ_zero(15.0, 12)", TEST_TOL1)
compare(sf.besselJ_zero( 5.0, 13)        ,        47.6493998066970948, "besselJ_zero( 5.0, 13)", TEST_TOL1)
compare(sf.besselJ_zero(15.0, 13)        ,        61.7897598959450550, "besselJ_zero(15.0, 13)", TEST_TOL1)
compare(sf.besselJ_zero( 5.0, 14)        ,        50.8071652030063595, "besselJ_zero( 5.0, 14)", TEST_TOL1)
compare(sf.besselJ_zero(15.0, 14)        ,        65.0230502510422545, "besselJ_zero(15.0, 14)", TEST_TOL1)
compare(sf.besselJ_zero( 5.0, 15)        ,        53.9630265583781707, "besselJ_zero( 5.0, 15)", TEST_TOL1)
compare(sf.besselJ_zero(15.0, 15)        ,        68.2473219964207837, "besselJ_zero(15.0, 15)", TEST_TOL1)
compare(sf.besselJ_zero( 5.0, 16)        ,        57.1173027815042647, "besselJ_zero( 5.0, 16)", TEST_TOL1)
compare(sf.besselJ_zero(15.0, 16)        ,        71.4638758850226630, "besselJ_zero(15.0, 16)", TEST_TOL1)
compare(sf.besselJ_zero( 5.0, 17)        ,        60.2702450729428077, "besselJ_zero( 5.0, 17)", TEST_TOL1)
compare(sf.besselJ_zero(15.0, 17)        ,        74.6737687121404241, "besselJ_zero(15.0, 17)", TEST_TOL1)
compare(sf.besselJ_zero( 5.0, 18)        ,        63.4220540458757799, "besselJ_zero( 5.0, 18)", TEST_TOL1)
compare(sf.besselJ_zero(15.0, 18)        ,        77.8778689734863729, "besselJ_zero(15.0, 18)", TEST_TOL1)
compare(sf.besselJ_zero( 5.0, 19)        ,        66.5728918871182703, "besselJ_zero( 5.0, 19)", TEST_TOL1)
compare(sf.besselJ_zero(15.0, 19)        ,        81.0768977206328326, "besselJ_zero(15.0, 19)", TEST_TOL1)
compare(sf.besselJ_zero( 5.0, 20)        ,         69.722891161716742, "besselJ_zero( 5.0, 20)", TEST_TOL1)
compare(sf.besselJ_zero(15.0, 20)        ,         84.271459069716442, "besselJ_zero(15.0, 20)", TEST_TOL1)
compare(sf.besselJ_zero( 23.0, 11)       ,         65.843393469524653, "besselJ_zero( 23.0, 11)", TEST_TOL6)
compare(sf.besselJ_zero( 30.0, 11)       ,         74.797306585175426, "besselJ_zero( 30.0, 11)", TEST_TOL6)
compare(sf.besselJ_zero( 32.0, 15)       ,         90.913637691861741, "besselJ_zero( 32.0, 15)", TEST_TOL6)
compare(sf.besselJ_zero( 50.0, 15)       ,         113.69747988073942, "besselJ_zero( 50.0, 15)", TEST_TOL6)
compare(sf.besselJ_zero(  5.0, 22)       ,         76.020793430591605, "besselJ_zero(  5.0, 22)", TEST_TOL2)
compare(sf.besselJ_zero( 10.0, 22)       ,         83.439189796105756, "besselJ_zero( 10.0, 22)", TEST_TOL3)
compare(sf.besselJ_zero( 12.0, 22)       ,         86.345496520534055, "besselJ_zero( 12.0, 22)", TEST_TOL6)
compare(sf.besselJ_zero(100.0, 22)       ,         199.82150220122519, "besselJ_zero(100.0, 22)", TEST_TOL4)
compare(sf.besselJ_zero(500.0, 22)       ,         649.34132440891735, "besselJ_zero(500.0, 22)", TEST_TOL2)
